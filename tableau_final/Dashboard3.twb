<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20204.21.0114.0916                               -->
<workbook original-version='18.1' source-build='2020.4.1 (20204.21.0114.0916)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <_.fcp.SetMembershipControl.true...SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Top N' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='18'>
        <calculation class='tableau' formula='18' />
        <range granularity='1' max='220' min='1' />
      </column>
    </datasource>
    <datasource caption='Sheet1 (Final_emissions)' inline='true' name='federated.1vt32u20zcvd8x1g6p6181vbbn3x' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Final_emissions' name='excel-direct.1qbsz710tfo7vk1fmnsxs1kqqrk7'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/20190722/Desktop/2IMV20 Visualization (Q6)/Assignment 2 - Data Visualization/data/WDI/final/Final_emissions.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1qbsz710tfo7vk1fmnsxs1kqqrk7' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:V3181:no:A1:V3181:0' header='yes' outcome='6'>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='integer' date-parse-format='yyyy' name='Time' ordinal='1' />
            <column datatype='string' name='Country Name' ordinal='2' />
            <column datatype='string' name='Region' ordinal='3' />
            <column datatype='string' name='Income group' ordinal='4' />
            <column datatype='string' name='Time Code' ordinal='5' />
            <column datatype='string' name='Country Code' ordinal='6' />
            <column datatype='real' name='Total greenhouse gas emissions (kt of CO2 equivalent) (EN.ATM.GHGT.KT.CE)' ordinal='7' />
            <column datatype='real' name='Other greenhouse gas emissions, HFC, PFC and SF6 (thousand metric tons of CO2 equivalent) (EN.ATM.GHGO.KT.CE)' ordinal='8' />
            <column datatype='real' name='Methane emissions (kt of CO2 equivalent) (EN.ATM.METH.KT.CE)' ordinal='9' />
            <column datatype='real' name='CO2 emissions (kt) (EN.ATM.CO2E.KT)' ordinal='10' />
            <column datatype='real' name='GDP (current US$) (NY.GDP.MKTP.CD)' ordinal='11' />
            <column datatype='real' name='GDP growth (annual %) (NY.GDP.MKTP.KD.ZG)' ordinal='12' />
            <column datatype='real' name='GDP per capita, PPP (current international $) (NY.GDP.PCAP.PP.CD)' ordinal='13' />
            <column datatype='real' name='GDP, PPP (current international $) (NY.GDP.MKTP.PP.CD)' ordinal='14' />
            <column datatype='real' name='GDP per capita (current US$) (NY.GDP.PCAP.CD)' ordinal='15' />
            <column datatype='real' name='Population growth (annual %) (SP.POP.GROW)' ordinal='16' />
            <column datatype='integer' name='Population, total (SP.POP.TOTL)' ordinal='17' />
            <column datatype='real' name='CO2 emissions (metric tons per capita) (EN.ATM.CO2E.PC)' ordinal='18' />
            <column datatype='real' name='CO2 emissions (kg per PPP $ of GDP) (EN.ATM.CO2E.PP.GD)' ordinal='19' />
            <column datatype='real' name='Nitrous oxide emissions (thousand metric tons of CO2 equivalent) (EN.ATM.NOXE.KT.CE)' ordinal='20' />
            <column datatype='real' name='Total emissions (kt of CO2 equivalent)' ordinal='21' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1qbsz710tfo7vk1fmnsxs1kqqrk7' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:V3181:no:A1:V3181:0' header='yes' outcome='6'>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='integer' date-parse-format='yyyy' name='Time' ordinal='1' />
            <column datatype='string' name='Country Name' ordinal='2' />
            <column datatype='string' name='Region' ordinal='3' />
            <column datatype='string' name='Income group' ordinal='4' />
            <column datatype='string' name='Time Code' ordinal='5' />
            <column datatype='string' name='Country Code' ordinal='6' />
            <column datatype='real' name='Total greenhouse gas emissions (kt of CO2 equivalent) (EN.ATM.GHGT.KT.CE)' ordinal='7' />
            <column datatype='real' name='Other greenhouse gas emissions, HFC, PFC and SF6 (thousand metric tons of CO2 equivalent) (EN.ATM.GHGO.KT.CE)' ordinal='8' />
            <column datatype='real' name='Methane emissions (kt of CO2 equivalent) (EN.ATM.METH.KT.CE)' ordinal='9' />
            <column datatype='real' name='CO2 emissions (kt) (EN.ATM.CO2E.KT)' ordinal='10' />
            <column datatype='real' name='GDP (current US$) (NY.GDP.MKTP.CD)' ordinal='11' />
            <column datatype='real' name='GDP growth (annual %) (NY.GDP.MKTP.KD.ZG)' ordinal='12' />
            <column datatype='real' name='GDP per capita, PPP (current international $) (NY.GDP.PCAP.PP.CD)' ordinal='13' />
            <column datatype='real' name='GDP, PPP (current international $) (NY.GDP.MKTP.PP.CD)' ordinal='14' />
            <column datatype='real' name='GDP per capita (current US$) (NY.GDP.PCAP.CD)' ordinal='15' />
            <column datatype='real' name='Population growth (annual %) (SP.POP.GROW)' ordinal='16' />
            <column datatype='integer' name='Population, total (SP.POP.TOTL)' ordinal='17' />
            <column datatype='real' name='CO2 emissions (metric tons per capita) (EN.ATM.CO2E.PC)' ordinal='18' />
            <column datatype='real' name='CO2 emissions (kg per PPP $ of GDP) (EN.ATM.CO2E.PP.GD)' ordinal='19' />
            <column datatype='real' name='Nitrous oxide emissions (thousand metric tons of CO2 equivalent) (EN.ATM.NOXE.KT.CE)' ordinal='20' />
            <column datatype='real' name='Total emissions (kt of CO2 equivalent)' ordinal='21' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:V3181:no:A1:V3181:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_B4C9D7F79E6245C3BBCA98D8920226B7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Time</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Time]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Time</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_B4C9D7F79E6245C3BBCA98D8920226B7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country Name]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Country Name</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LRU_RRU_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_B4C9D7F79E6245C3BBCA98D8920226B7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LRU_RRU_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_B4C9D7F79E6245C3BBCA98D8920226B7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Income group</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Income group]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Income group</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LRU_RRU_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_B4C9D7F79E6245C3BBCA98D8920226B7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Time Code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Time Code]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Time Code</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LRU_RRU_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_B4C9D7F79E6245C3BBCA98D8920226B7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country Code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country Code]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Country Code</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LRU_RRU_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_B4C9D7F79E6245C3BBCA98D8920226B7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total greenhouse gas emissions (kt of CO2 equivalent) (EN.ATM.GHGT.KT.CE)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total greenhouse gas emissions (kt of CO2 equivalent) (EN.ATM.GHGT.KT.CE)]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Total greenhouse gas emissions (kt of CO2 equivalent) (EN.ATM.GHGT.KT.CE)</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_B4C9D7F79E6245C3BBCA98D8920226B7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Other greenhouse gas emissions, HFC, PFC and SF6 (thousand metric tons of CO2 equivalent) (EN.ATM.GHGO.KT.CE)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Other greenhouse gas emissions, HFC, PFC and SF6 (thousand metric tons of CO2 equivalent) (EN.ATM.GHGO.KT.CE)]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Other greenhouse gas emissions, HFC, PFC and SF6 (thousand metric tons of CO2 equivalent) (EN.ATM.GHGO.KT.CE)</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_B4C9D7F79E6245C3BBCA98D8920226B7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Methane emissions (kt of CO2 equivalent) (EN.ATM.METH.KT.CE)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Methane emissions (kt of CO2 equivalent) (EN.ATM.METH.KT.CE)]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Methane emissions (kt of CO2 equivalent) (EN.ATM.METH.KT.CE)</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_B4C9D7F79E6245C3BBCA98D8920226B7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CO2 emissions (kt) (EN.ATM.CO2E.KT)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[CO2 emissions (kt) (EN.ATM.CO2E.KT)]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>CO2 emissions (kt) (EN.ATM.CO2E.KT)</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_B4C9D7F79E6245C3BBCA98D8920226B7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GDP (current US$) (NY.GDP.MKTP.CD)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[GDP (current US$) (NY.GDP.MKTP.CD)]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>GDP (current US$) (NY.GDP.MKTP.CD)</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_B4C9D7F79E6245C3BBCA98D8920226B7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GDP growth (annual %) (NY.GDP.MKTP.KD.ZG)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[GDP growth (annual %) (NY.GDP.MKTP.KD.ZG)]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>GDP growth (annual %) (NY.GDP.MKTP.KD.ZG)</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_B4C9D7F79E6245C3BBCA98D8920226B7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GDP per capita, PPP (current international $) (NY.GDP.PCAP.PP.CD)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[GDP per capita, PPP (current international $) (NY.GDP.PCAP.PP.CD)]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>GDP per capita, PPP (current international $) (NY.GDP.PCAP.PP.CD)</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_B4C9D7F79E6245C3BBCA98D8920226B7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GDP, PPP (current international $) (NY.GDP.MKTP.PP.CD)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[GDP, PPP (current international $) (NY.GDP.MKTP.PP.CD)]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>GDP, PPP (current international $) (NY.GDP.MKTP.PP.CD)</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_B4C9D7F79E6245C3BBCA98D8920226B7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GDP per capita (current US$) (NY.GDP.PCAP.CD)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[GDP per capita (current US$) (NY.GDP.PCAP.CD)]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>GDP per capita (current US$) (NY.GDP.PCAP.CD)</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_B4C9D7F79E6245C3BBCA98D8920226B7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population growth (annual %) (SP.POP.GROW)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Population growth (annual %) (SP.POP.GROW)]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Population growth (annual %) (SP.POP.GROW)</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_B4C9D7F79E6245C3BBCA98D8920226B7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population, total (SP.POP.TOTL)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population, total (SP.POP.TOTL)]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Population, total (SP.POP.TOTL)</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_B4C9D7F79E6245C3BBCA98D8920226B7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CO2 emissions (metric tons per capita) (EN.ATM.CO2E.PC)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[CO2 emissions (metric tons per capita) (EN.ATM.CO2E.PC)]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>CO2 emissions (metric tons per capita) (EN.ATM.CO2E.PC)</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_B4C9D7F79E6245C3BBCA98D8920226B7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CO2 emissions (kg per PPP $ of GDP) (EN.ATM.CO2E.PP.GD)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[CO2 emissions (kg per PPP $ of GDP) (EN.ATM.CO2E.PP.GD)]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>CO2 emissions (kg per PPP $ of GDP) (EN.ATM.CO2E.PP.GD)</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_B4C9D7F79E6245C3BBCA98D8920226B7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Nitrous oxide emissions (thousand metric tons of CO2 equivalent) (EN.ATM.NOXE.KT.CE)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Nitrous oxide emissions (thousand metric tons of CO2 equivalent) (EN.ATM.NOXE.KT.CE)]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Nitrous oxide emissions (thousand metric tons of CO2 equivalent) (EN.ATM.NOXE.KT.CE)</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_B4C9D7F79E6245C3BBCA98D8920226B7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total emissions (kt of CO2 equivalent)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total emissions (kt of CO2 equivalent)]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Total emissions (kt of CO2 equivalent)</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_B4C9D7F79E6245C3BBCA98D8920226B7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='real' name='[CO2 emissions (kg per PPP $ of GDP) (EN.ATM.CO2E.PP.GD)]' role='measure' type='quantitative' />
      <column datatype='real' name='[CO2 emissions (kt) (EN.ATM.CO2E.KT)]' role='measure' type='quantitative' />
      <column datatype='real' name='[CO2 emissions (metric tons per capita) (EN.ATM.CO2E.PC)]' role='measure' type='quantitative' />
      <column datatype='string' name='[Country Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='integer' name='[F1]' role='measure' type='quantitative' />
      <column datatype='real' name='[GDP (current US$) (NY.GDP.MKTP.CD)]' role='measure' type='quantitative' />
      <column datatype='real' name='[GDP growth (annual %) (NY.GDP.MKTP.KD.ZG)]' role='measure' type='quantitative' />
      <column datatype='real' name='[GDP per capita (current US$) (NY.GDP.PCAP.CD)]' role='measure' type='quantitative' />
      <column datatype='real' name='[GDP per capita, PPP (current international $) (NY.GDP.PCAP.PP.CD)]' role='measure' type='quantitative' />
      <column datatype='real' name='[GDP, PPP (current international $) (NY.GDP.MKTP.PP.CD)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Methane emissions (kt of CO2 equivalent) (EN.ATM.METH.KT.CE)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Nitrous oxide emissions (thousand metric tons of CO2 equivalent) (EN.ATM.NOXE.KT.CE)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Other greenhouse gas emissions, HFC, PFC and SF6 (thousand metric tons of CO2 equivalent) (EN.ATM.GHGO.KT.CE)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Population growth (annual %) (SP.POP.GROW)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Population, total (SP.POP.TOTL)]' role='measure' type='quantitative' />
      <column datatype='string' name='[Region]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Time]' role='measure' type='quantitative' />
      <column datatype='real' name='[Total emissions (kt of CO2 equivalent)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Total greenhouse gas emissions (kt of CO2 equivalent) (EN.ATM.GHGT.KT.CE)]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_B4C9D7F79E6245C3BBCA98D8920226B7]' role='measure' type='quantitative' />
      <column-instance column='[__tableau_internal_object_id__].[Sheet1_B4C9D7F79E6245C3BBCA98D8920226B7]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Sheet1_B4C9D7F79E6245C3BBCA98D8920226B7:qk]' pivot='key' type='quantitative' />
      <column-instance column='[CO2 emissions (kt) (EN.ATM.CO2E.KT)]' derivation='Avg' name='[avg:CO2 emissions (kt) (EN.ATM.CO2E.KT):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Methane emissions (kt of CO2 equivalent) (EN.ATM.METH.KT.CE)]' derivation='Avg' name='[avg:Methane emissions (kt of CO2 equivalent) (EN.ATM.METH.KT.CE):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Nitrous oxide emissions (thousand metric tons of CO2 equivalent) (EN.ATM.NOXE.KT.CE)]' derivation='Avg' name='[avg:Nitrous oxide emissions (thousand metric tons of CO2 equivalent) (EN.ATM.NOXE.KT.CE):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Other greenhouse gas emissions, HFC, PFC and SF6 (thousand metric tons of CO2 equivalent) (EN.ATM.GHGO.KT.CE)]' derivation='Avg' name='[avg:Other greenhouse gas emissions, HFC, PFC and SF6 (thousand metric tons of CO2 equivalent) (EN.ATM.GHGO.KT.CE):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total greenhouse gas emissions (kt of CO2 equivalent) (EN.ATM.GHGT.KT.CE)]' derivation='Avg' name='[avg:Total greenhouse gas emissions (kt of CO2 equivalent) (EN.ATM.GHGT.KT.CE):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
      <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
      <column-instance column='[Time]' derivation='None' name='[none:Time:ok]' pivot='key' type='ordinal' />
      <column-instance column='[CO2 emissions (kg per PPP $ of GDP) (EN.ATM.CO2E.PP.GD)]' derivation='Sum' name='[sum:CO2 emissions (kg per PPP $ of GDP) (EN.ATM.CO2E.PP.GD):qk]' pivot='key' type='quantitative' />
      <column-instance column='[CO2 emissions (kt) (EN.ATM.CO2E.KT)]' derivation='Sum' name='[sum:CO2 emissions (kt) (EN.ATM.CO2E.KT):qk]' pivot='key' type='quantitative' />
      <column-instance column='[CO2 emissions (metric tons per capita) (EN.ATM.CO2E.PC)]' derivation='Sum' name='[sum:CO2 emissions (metric tons per capita) (EN.ATM.CO2E.PC):qk]' pivot='key' type='quantitative' />
      <column-instance column='[F1]' derivation='Sum' name='[sum:F1:qk]' pivot='key' type='quantitative' />
      <column-instance column='[GDP (current US$) (NY.GDP.MKTP.CD)]' derivation='Sum' name='[sum:GDP (current US$) (NY.GDP.MKTP.CD):qk]' pivot='key' type='quantitative' />
      <column-instance column='[GDP growth (annual %) (NY.GDP.MKTP.KD.ZG)]' derivation='Sum' name='[sum:GDP growth (annual %) (NY.GDP.MKTP.KD.ZG):qk]' pivot='key' type='quantitative' />
      <column-instance column='[GDP per capita (current US$) (NY.GDP.PCAP.CD)]' derivation='Sum' name='[sum:GDP per capita (current US$) (NY.GDP.PCAP.CD):qk]' pivot='key' type='quantitative' />
      <column-instance column='[GDP per capita, PPP (current international $) (NY.GDP.PCAP.PP.CD)]' derivation='Sum' name='[sum:GDP per capita, PPP (current international $) (NY.GDP.PCAP.PP.CD):qk]' pivot='key' type='quantitative' />
      <column-instance column='[GDP, PPP (current international $) (NY.GDP.MKTP.PP.CD)]' derivation='Sum' name='[sum:GDP, PPP (current international $) (NY.GDP.MKTP.PP.CD):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Methane emissions (kt of CO2 equivalent) (EN.ATM.METH.KT.CE)]' derivation='Sum' name='[sum:Methane emissions (kt of CO2 equivalent) (EN.ATM.METH.KT.CE):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Nitrous oxide emissions (thousand metric tons of CO2 equivalent) (EN.ATM.NOXE.KT.CE)]' derivation='Sum' name='[sum:Nitrous oxide emissions (thousand metric tons of CO2 equivalent) (EN.ATM.NOXE.KT.CE):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Other greenhouse gas emissions, HFC, PFC and SF6 (thousand metric tons of CO2 equivalent) (EN.ATM.GHGO.KT.CE)]' derivation='Sum' name='[sum:Other greenhouse gas emissions, HFC, PFC and SF6 (thousand metric tons of CO2 equivalent) (EN.ATM.GHGO.KT.CE):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Population growth (annual %) (SP.POP.GROW)]' derivation='Sum' name='[sum:Population growth (annual %) (SP.POP.GROW):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Population, total (SP.POP.TOTL)]' derivation='Sum' name='[sum:Population, total (SP.POP.TOTL):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Time]' derivation='Sum' name='[sum:Time:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total emissions (kt of CO2 equivalent)]' derivation='Sum' name='[sum:Total emissions (kt of CO2 equivalent):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total greenhouse gas emissions (kt of CO2 equivalent) (EN.ATM.GHGT.KT.CE)]' derivation='Sum' name='[sum:Total greenhouse gas emissions (kt of CO2 equivalent) (EN.ATM.GHGT.KT.CE):qk]' pivot='key' type='quantitative' />
      <group caption='Action (Country Name)' hidden='true' name='[Action (Country Name)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country Name]' />
        </groupfilter>
      </group>
      <group caption='Action (Country Name,Region)' hidden='true' name='[Action (Country Name,Region)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country Name]' />
          <groupfilter function='level-members' level='[Region]' />
        </groupfilter>
      </group>
      <group caption='Action (Time)' hidden='true' name='[Action (Time)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Time:ok]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Country Name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Bahamas, The&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Egypt, Arab Rep.&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Congo, Rep.&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Korea, Rep.&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Gambia, The&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Russian Federation&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;St. Lucia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kyrgyz Republic&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Slovak Republic&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lao PDR&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Congo, Dem. Rep.&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Region:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;East Asia &amp; Pacific&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Middle East &amp; North Africa&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sub-Saharan Africa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Latin America &amp; Caribbean&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;South Asia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Europe &amp; Central Asia&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[sum:CO2 emissions from solid fuel consumption (kt) (EN.ATM.CO2E.SF.KT):qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[avg:CO2 emissions (kt) (EN.ATM.CO2E.KT):qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[sum:CO2 emissions (kt) (EN.ATM.CO2E.KT):qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[avg:Total greenhouse gas emissions (kt of CO2 equivalent) (EN.ATM.GHGT.KT.CE):qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[sum:Total greenhouse gas emissions (kt of CO2 equivalent) (EN.ATM.GHGT.KT.CE):qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[avg:Other greenhouse gas emissions, HFC, PFC and SF6 (thousand metric tons of CO2 equivalent) (EN.ATM.GHGO.KT.CE):qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[sum:Other greenhouse gas emissions, HFC, PFC and SF6 (thousand metric tons of CO2 equivalent) (EN.ATM.GHGO.KT.CE):qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[sum:GDP growth (annual \%) (NY.GDP.MKTP.KD.ZG):qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[__tableau_internal_object_id__].[cnt:Sheet1_B4C9D7F79E6245C3BBCA98D8920226B7:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[sum:CO2 emissions (metric tons per capita) (EN.ATM.CO2E.PC):qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[sum:Adjusted savings: carbon dioxide damage (\% of GNI) (NY.ADJ.DCO2.GN.ZS):qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[sum:Unnamed: 0:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[none:Region:nk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[sum:GDP (current US$) (NY.GDP.MKTP.CD):qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[sum:Population, total (SP.POP.TOTL):qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[sum:CO2 emissions from gaseous fuel consumption (kt) (EN.ATM.CO2E.GF.KT):qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[sum:GDP per capita, PPP (current international $) (NY.GDP.PCAP.PP.CD):qk]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[sum:GDP, PPP (current international $) (NY.GDP.MKTP.PP.CD):qk]&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[sum:Population growth (annual \%) (SP.POP.GROW):qk]&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[sum:Time:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[avg:Nitrous oxide emissions (thousand metric tons of CO2 equivalent) (EN.ATM.NOXE.KT.CE):qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[sum:Nitrous oxide emissions (thousand metric tons of CO2 equivalent) (EN.ATM.NOXE.KT.CE):qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[sum:GDP per capita (current US$) (NY.GDP.PCAP.CD):qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[sum:CO2 emissions from liquid fuel consumption (kt) (EN.ATM.CO2E.LF.KT):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[avg:Methane emissions (kt of CO2 equivalent) (EN.ATM.METH.KT.CE):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[sum:Methane emissions (kt of CO2 equivalent) (EN.ATM.METH.KT.CE):qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[sum:F1:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[sum:Total emissions (kt of CO2 equivalent):qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[sum:CO2 emissions (kg per PPP $ of GDP) (EN.ATM.CO2E.PP.GD):qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Netherlands&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_B4C9D7F79E6245C3BBCA98D8920226B7'>
            <properties context=''>
              <relation connection='excel-direct.1qbsz710tfo7vk1fmnsxs1kqqrk7' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:V3181:no:A1:V3181:0' header='yes' outcome='6'>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='integer' date-parse-format='yyyy' name='Time' ordinal='1' />
                  <column datatype='string' name='Country Name' ordinal='2' />
                  <column datatype='string' name='Region' ordinal='3' />
                  <column datatype='string' name='Income group' ordinal='4' />
                  <column datatype='string' name='Time Code' ordinal='5' />
                  <column datatype='string' name='Country Code' ordinal='6' />
                  <column datatype='real' name='Total greenhouse gas emissions (kt of CO2 equivalent) (EN.ATM.GHGT.KT.CE)' ordinal='7' />
                  <column datatype='real' name='Other greenhouse gas emissions, HFC, PFC and SF6 (thousand metric tons of CO2 equivalent) (EN.ATM.GHGO.KT.CE)' ordinal='8' />
                  <column datatype='real' name='Methane emissions (kt of CO2 equivalent) (EN.ATM.METH.KT.CE)' ordinal='9' />
                  <column datatype='real' name='CO2 emissions (kt) (EN.ATM.CO2E.KT)' ordinal='10' />
                  <column datatype='real' name='GDP (current US$) (NY.GDP.MKTP.CD)' ordinal='11' />
                  <column datatype='real' name='GDP growth (annual %) (NY.GDP.MKTP.KD.ZG)' ordinal='12' />
                  <column datatype='real' name='GDP per capita, PPP (current international $) (NY.GDP.PCAP.PP.CD)' ordinal='13' />
                  <column datatype='real' name='GDP, PPP (current international $) (NY.GDP.MKTP.PP.CD)' ordinal='14' />
                  <column datatype='real' name='GDP per capita (current US$) (NY.GDP.PCAP.CD)' ordinal='15' />
                  <column datatype='real' name='Population growth (annual %) (SP.POP.GROW)' ordinal='16' />
                  <column datatype='integer' name='Population, total (SP.POP.TOTL)' ordinal='17' />
                  <column datatype='real' name='CO2 emissions (metric tons per capita) (EN.ATM.CO2E.PC)' ordinal='18' />
                  <column datatype='real' name='CO2 emissions (kg per PPP $ of GDP) (EN.ATM.CO2E.PP.GD)' ordinal='19' />
                  <column datatype='real' name='Nitrous oxide emissions (thousand metric tons of CO2 equivalent) (EN.ATM.NOXE.KT.CE)' ordinal='20' />
                  <column datatype='real' name='Total emissions (kt of CO2 equivalent)' ordinal='21' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <shared-views>
    <shared-view name='federated.1vt32u20zcvd8x1g6p6181vbbn3x'>
      <datasources>
        <datasource caption='Sheet1 (Final_emissions)' name='federated.1vt32u20zcvd8x1g6p6181vbbn3x' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Top N' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='18'>
          <calculation class='tableau' formula='18' />
          <range granularity='1' max='220' min='1' />
        </column>
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.1vt32u20zcvd8x1g6p6181vbbn3x'>
        <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
        <column datatype='string' name='[Region]' role='dimension' type='nominal' />
        <column datatype='integer' name='[Time]' role='measure' type='quantitative' />
        <column datatype='real' name='[Total emissions (kt of CO2 equivalent)]' role='measure' type='quantitative' />
        <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
        <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
        <column-instance column='[Time]' derivation='None' name='[none:Time:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[none:Country Name:nk]'>
        <groupfilter count='[Parameters].[Parameter 1]' end='top' function='end' units='records' user:ui-marker='end'>
          <groupfilter direction='DESC' expression='SUM([Total emissions (kt of CO2 equivalent)])' function='order' user:ui-marker='order'>
            <groupfilter function='level-members' level='[none:Country Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </groupfilter>
        </groupfilter>
        <target field='[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[none:Country Name:nk]' />
      </filter>
      <filter class='categorical' column='[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[none:Region:nk]'>
        <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        <target field='[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[none:Region:nk]' />
      </filter>
      <filter class='quantitative' column='[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[none:Time:qk]' included-values='in-range'>
        <min>2000</min>
        <max>2012</max>
      </filter>
    </shared-view>
  </shared-views>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Emission Dashboard' type='sheet' worksheet='Map by regions' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Emission Dashboard' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Emission Dashboard' type='sheet' worksheet='Packed Bubbles of Countries wrt Total emissions' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Emission Dashboard' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action3]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Emission Dashboard' type='sheet' worksheet='Area Chart of Emissions' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Emission Dashboard' />
      </command>
    </action>
    <action caption='Filter 4 (generated)' name='[Action4]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Emission Dashboard' type='sheet' worksheet='GDP per capita vs CO2 emissions per capita' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Emission Dashboard' />
      </command>
    </action>
    <action caption='Filter 5 (generated)' name='[Action5]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Emission Dashboard' type='sheet' worksheet='GDP per capita vs Population vs Total Emission' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Emission Dashboard' />
      </command>
    </action>
    <action caption='Filter 6 (generated)' name='[Action6]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Emission Dashboard' type='sheet' worksheet='Stacked bar chart for emissions' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Emission Dashboard' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Area Chart of Emissions'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='12'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Final_emissions)' name='federated.1vt32u20zcvd8x1g6p6181vbbn3x' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top N' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='18'>
              <calculation class='tableau' formula='18' />
              <range granularity='1' max='220' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1vt32u20zcvd8x1g6p6181vbbn3x'>
            <column datatype='real' name='[CO2 emissions (kt) (EN.ATM.CO2E.KT)]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Methane emissions (kt of CO2 equivalent) (EN.ATM.METH.KT.CE)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Nitrous oxide emissions (thousand metric tons of CO2 equivalent) (EN.ATM.NOXE.KT.CE)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Other greenhouse gas emissions, HFC, PFC and SF6 (thousand metric tons of CO2 equivalent) (EN.ATM.GHGO.KT.CE)]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Time]' role='measure' type='quantitative' />
            <column datatype='real' name='[Total emissions (kt of CO2 equivalent)]' role='measure' type='quantitative' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Time]' derivation='None' name='[none:Time:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Time]' derivation='None' name='[none:Time:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CO2 emissions (kt) (EN.ATM.CO2E.KT)]' derivation='Sum' name='[sum:CO2 emissions (kt) (EN.ATM.CO2E.KT):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Methane emissions (kt of CO2 equivalent) (EN.ATM.METH.KT.CE)]' derivation='Sum' name='[sum:Methane emissions (kt of CO2 equivalent) (EN.ATM.METH.KT.CE):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Nitrous oxide emissions (thousand metric tons of CO2 equivalent) (EN.ATM.NOXE.KT.CE)]' derivation='Sum' name='[sum:Nitrous oxide emissions (thousand metric tons of CO2 equivalent) (EN.ATM.NOXE.KT.CE):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Other greenhouse gas emissions, HFC, PFC and SF6 (thousand metric tons of CO2 equivalent) (EN.ATM.GHGO.KT.CE)]' derivation='Sum' name='[sum:Other greenhouse gas emissions, HFC, PFC and SF6 (thousand metric tons of CO2 equivalent) (EN.ATM.GHGO.KT.CE):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[sum:CO2 emissions (kt) (EN.ATM.CO2E.KT):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[sum:Methane emissions (kt of CO2 equivalent) (EN.ATM.METH.KT.CE):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[sum:Nitrous oxide emissions (thousand metric tons of CO2 equivalent) (EN.ATM.NOXE.KT.CE):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[sum:Other greenhouse gas emissions, HFC, PFC and SF6 (thousand metric tons of CO2 equivalent) (EN.ATM.GHGO.KT.CE):qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[Action (Country Name)]'>
            <groupfilter function='level-members' level='[Country Name]' user:ui-action-filter='[Action5]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[Action (Country Name,Region)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country Name]' />
              <groupfilter function='level-members' level='[Region]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[:Measure Names]</column>
            <column>[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[none:Country Name:nk]</column>
            <column>[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[none:Region:nk]</column>
            <column>[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[none:Time:qk]</column>
            <column>[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[Action (Country Name)]</column>
            <column>[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[Action (Country Name,Region)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[:Measure Names]' />
              <lod column='[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[sum:CO2 emissions (kt) (EN.ATM.CO2E.KT):qk]' />
              <lod column='[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[sum:Methane emissions (kt of CO2 equivalent) (EN.ATM.METH.KT.CE):qk]' />
              <lod column='[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[sum:Nitrous oxide emissions (thousand metric tons of CO2 equivalent) (EN.ATM.NOXE.KT.CE):qk]' />
              <lod column='[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[sum:Other greenhouse gas emissions, HFC, PFC and SF6 (thousand metric tons of CO2 equivalent) (EN.ATM.GHGO.KT.CE):qk]' />
              <lod column='[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[Multiple Values]</rows>
        <cols>[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[none:Time:ok]</cols>
      </table>
      <simple-id uuid='{3D847732-13A9-4EF1-82F1-C2F2C146F846}' />
    </worksheet>
    <worksheet name='GDP per capita vs CO2 emissions per capita'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='10'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Final_emissions)' name='federated.1vt32u20zcvd8x1g6p6181vbbn3x' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top N' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='18'>
              <calculation class='tableau' formula='18' />
              <range granularity='1' max='220' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1vt32u20zcvd8x1g6p6181vbbn3x'>
            <column datatype='real' name='[CO2 emissions (metric tons per capita) (EN.ATM.CO2E.PC)]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[GDP per capita (current US$) (NY.GDP.PCAP.CD)]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Time]' role='measure' type='quantitative' />
            <column datatype='real' name='[Total emissions (kt of CO2 equivalent)]' role='measure' type='quantitative' />
            <column-instance column='[GDP per capita (current US$) (NY.GDP.PCAP.CD)]' derivation='Avg' name='[avg:GDP per capita (current US$) (NY.GDP.PCAP.CD):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Time]' derivation='None' name='[none:Time:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Time]' derivation='None' name='[none:Time:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CO2 emissions (metric tons per capita) (EN.ATM.CO2E.PC)]' derivation='Sum' name='[sum:CO2 emissions (metric tons per capita) (EN.ATM.CO2E.PC):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total emissions (kt of CO2 equivalent)]' derivation='Sum' name='[sum:Total emissions (kt of CO2 equivalent):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[Action (Country Name)]'>
            <groupfilter function='level-members' level='[Country Name]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[Action (Country Name,Region)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country Name]' />
              <groupfilter function='level-members' level='[Region]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[Action (Time)]'>
            <groupfilter function='level-members' level='[none:Time:ok]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[Action (Country Name)]</column>
            <column>[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[none:Country Name:nk]</column>
            <column>[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[none:Region:nk]</column>
            <column>[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[Action (Country Name,Region)]</column>
            <column>[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[none:Time:qk]</column>
            <column>[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[Action (Time)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[avg:GDP per capita (current US$) (NY.GDP.PCAP.CD):qk]' field-type='quantitative' max='151375.12920474799' min='400.0' range-type='fixed' scale='log' scope='cols' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[none:Region:nk]' />
              <size column='[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[sum:Total emissions (kt of CO2 equivalent):qk]' />
              <lod column='[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[none:Country Name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.9010497331619263' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[sum:CO2 emissions (metric tons per capita) (EN.ATM.CO2E.PC):qk]</rows>
        <cols>[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[avg:GDP per capita (current US$) (NY.GDP.PCAP.CD):qk]</cols>
      </table>
      <simple-id uuid='{AB4339F0-5D40-4457-8390-7B1A82404F81}' />
    </worksheet>
    <worksheet name='GDP per capita vs Population vs Total Emission'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='12'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Final_emissions)' name='federated.1vt32u20zcvd8x1g6p6181vbbn3x' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top N' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='18'>
              <calculation class='tableau' formula='18' />
              <range granularity='1' max='220' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1vt32u20zcvd8x1g6p6181vbbn3x'>
            <column datatype='real' name='[CO2 emissions (kg per PPP $ of GDP) (EN.ATM.CO2E.PP.GD)]' role='measure' type='quantitative' />
            <column datatype='real' name='[CO2 emissions (metric tons per capita) (EN.ATM.CO2E.PC)]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Time]' role='measure' type='quantitative' />
            <column datatype='real' name='[Total emissions (kt of CO2 equivalent)]' role='measure' type='quantitative' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Time]' derivation='None' name='[none:Time:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Time]' derivation='None' name='[none:Time:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CO2 emissions (kg per PPP $ of GDP) (EN.ATM.CO2E.PP.GD)]' derivation='Sum' name='[sum:CO2 emissions (kg per PPP $ of GDP) (EN.ATM.CO2E.PP.GD):qk]' pivot='key' type='quantitative' />
            <column-instance column='[CO2 emissions (metric tons per capita) (EN.ATM.CO2E.PC)]' derivation='Sum' name='[sum:CO2 emissions (metric tons per capita) (EN.ATM.CO2E.PC):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total emissions (kt of CO2 equivalent)]' derivation='Sum' name='[sum:Total emissions (kt of CO2 equivalent):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[Action (Country Name)]'>
            <groupfilter function='level-members' level='[Country Name]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[Action (Country Name,Region)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country Name]' />
              <groupfilter function='level-members' level='[Region]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[Action (Time)]'>
            <groupfilter function='level-members' level='[none:Time:ok]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[none:Country Name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[sum:CO2 emissions (kg per PPP $ of GDP) (EN.ATM.CO2E.PP.GD):qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[Action (Country Name,Region)]</column>
            <column>[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[none:Country Name:nk]</column>
            <column>[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[none:Time:qk]</column>
            <column>[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[none:Region:nk]</column>
            <column>[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[Action (Time)]</column>
            <column>[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[Action (Country Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' center='5000000.0' field='[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[sum:Total emissions (kt of CO2 equivalent):qk]' min='28766.0' palette='red_blue_diverging_10_0' reverse='true' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[sum:Total emissions (kt of CO2 equivalent):qk]' />
            </encodings>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[sum:CO2 emissions (metric tons per capita) (EN.ATM.CO2E.PC):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[sum:Total emissions (kt of CO2 equivalent):qk]' />
            </encodings>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[sum:CO2 emissions (kg per PPP $ of GDP) (EN.ATM.CO2E.PP.GD):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[sum:Total emissions (kt of CO2 equivalent):qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1vt32u20zcvd8x1g6p6181vbbn3x].[sum:CO2 emissions (metric tons per capita) (EN.ATM.CO2E.PC):qk] + [federated.1vt32u20zcvd8x1g6p6181vbbn3x].[sum:CO2 emissions (kg per PPP $ of GDP) (EN.ATM.CO2E.PP.GD):qk])</rows>
        <cols>[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[none:Country Name:nk]</cols>
      </table>
      <simple-id uuid='{E6650A01-BCF4-48B3-AE9F-D12A74E1DE54}' />
    </worksheet>
    <worksheet name='Map by regions'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='10'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Final_emissions)' name='federated.1vt32u20zcvd8x1g6p6181vbbn3x' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top N' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='18'>
              <calculation class='tableau' formula='18' />
              <range granularity='1' max='220' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1vt32u20zcvd8x1g6p6181vbbn3x'>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Time]' role='measure' type='quantitative' />
            <column datatype='real' name='[Total emissions (kt of CO2 equivalent)]' role='measure' type='quantitative' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Time]' derivation='None' name='[none:Time:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Time]' derivation='None' name='[none:Time:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total emissions (kt of CO2 equivalent)]' derivation='Sum' name='[sum:Total emissions (kt of CO2 equivalent):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[Action (Time)]'>
            <groupfilter function='level-members' level='[none:Time:ok]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[none:Country Name:nk]</column>
            <column>[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[none:Region:nk]</column>
            <column>[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[none:Time:qk]</column>
            <column>[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[Action (Time)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' center='5000000.0' field='[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[sum:Total emissions (kt of CO2 equivalent):qk]' palette='red_blue_diverging_10_0' reverse='true' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[sum:Total emissions (kt of CO2 equivalent):qk]' />
              <lod column='[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[none:Country Name:nk]' />
              <geometry column='[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[Latitude (generated)]</rows>
        <cols>[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{F501616A-98E0-4880-AED0-C6DAAA5BDA9C}' />
    </worksheet>
    <worksheet name='Packed Bubbles of Countries wrt Total emissions'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='10'>Total emissions per Country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Final_emissions)' name='federated.1vt32u20zcvd8x1g6p6181vbbn3x' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top N' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='18'>
              <calculation class='tableau' formula='18' />
              <range granularity='1' max='220' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1vt32u20zcvd8x1g6p6181vbbn3x'>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Time]' role='measure' type='quantitative' />
            <column datatype='real' name='[Total emissions (kt of CO2 equivalent)]' role='measure' type='quantitative' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Time]' derivation='None' name='[none:Time:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Time]' derivation='None' name='[none:Time:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total emissions (kt of CO2 equivalent)]' derivation='Sum' name='[sum:Total emissions (kt of CO2 equivalent):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[Action (Country Name)]'>
            <groupfilter function='level-members' level='[Country Name]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[Action (Country Name,Region)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country Name]' />
              <groupfilter function='level-members' level='[Region]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[Action (Time)]'>
            <groupfilter function='level-members' level='[none:Time:ok]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[Action (Country Name,Region)]</column>
            <column>[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[Action (Country Name)]</column>
            <column>[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[none:Time:qk]</column>
            <column>[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[none:Country Name:nk]</column>
            <column>[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[none:Region:nk]</column>
            <column>[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[Action (Time)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' center='5000000.0' field='[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[sum:Total emissions (kt of CO2 equivalent):qk]' palette='red_blue_diverging_10_0' reverse='true' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='text-align' value='left' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[none:Region:nk]' />
              <size column='[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[sum:Total emissions (kt of CO2 equivalent):qk]' />
              <text column='[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[none:Country Name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{C0A536CE-ED1C-4868-8172-BC5EF1DB1A08}' />
    </worksheet>
    <worksheet name='Sheet 6'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Final_emissions)' name='federated.1vt32u20zcvd8x1g6p6181vbbn3x' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top N' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='18'>
              <calculation class='tableau' formula='18' />
              <range granularity='1' max='220' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1vt32u20zcvd8x1g6p6181vbbn3x'>
            <column datatype='real' name='[CO2 emissions (kg per PPP $ of GDP) (EN.ATM.CO2E.PP.GD)]' role='measure' type='quantitative' />
            <column datatype='real' name='[CO2 emissions (kt) (EN.ATM.CO2E.KT)]' role='measure' type='quantitative' />
            <column datatype='real' name='[CO2 emissions (metric tons per capita) (EN.ATM.CO2E.PC)]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[F1]' role='measure' type='quantitative' />
            <column datatype='real' name='[GDP (current US$) (NY.GDP.MKTP.CD)]' role='measure' type='quantitative' />
            <column datatype='real' name='[GDP growth (annual %) (NY.GDP.MKTP.KD.ZG)]' role='measure' type='quantitative' />
            <column datatype='real' name='[GDP per capita (current US$) (NY.GDP.PCAP.CD)]' role='measure' type='quantitative' />
            <column datatype='real' name='[GDP per capita, PPP (current international $) (NY.GDP.PCAP.PP.CD)]' role='measure' type='quantitative' />
            <column datatype='real' name='[GDP, PPP (current international $) (NY.GDP.MKTP.PP.CD)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Methane emissions (kt of CO2 equivalent) (EN.ATM.METH.KT.CE)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Nitrous oxide emissions (thousand metric tons of CO2 equivalent) (EN.ATM.NOXE.KT.CE)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Other greenhouse gas emissions, HFC, PFC and SF6 (thousand metric tons of CO2 equivalent) (EN.ATM.GHGO.KT.CE)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Population growth (annual %) (SP.POP.GROW)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Population, total (SP.POP.TOTL)]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Time]' role='measure' type='quantitative' />
            <column datatype='real' name='[Total emissions (kt of CO2 equivalent)]' role='measure' type='quantitative' />
            <_.fcp.ObjectModelTableType.false...column caption='Sheet1' datatype='integer' name='[__tableau_internal_object_id__].[Sheet1_B4C9D7F79E6245C3BBCA98D8920226B7]' role='measure' type='quantitative' />
            <column datatype='real' name='[Total greenhouse gas emissions (kt of CO2 equivalent) (EN.ATM.GHGT.KT.CE)]' role='measure' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_B4C9D7F79E6245C3BBCA98D8920226B7]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[Sheet1_B4C9D7F79E6245C3BBCA98D8920226B7]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Sheet1_B4C9D7F79E6245C3BBCA98D8920226B7:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Time]' derivation='None' name='[none:Time:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Time]' derivation='None' name='[none:Time:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CO2 emissions (kg per PPP $ of GDP) (EN.ATM.CO2E.PP.GD)]' derivation='Sum' name='[sum:CO2 emissions (kg per PPP $ of GDP) (EN.ATM.CO2E.PP.GD):qk]' pivot='key' type='quantitative' />
            <column-instance column='[CO2 emissions (kt) (EN.ATM.CO2E.KT)]' derivation='Sum' name='[sum:CO2 emissions (kt) (EN.ATM.CO2E.KT):qk]' pivot='key' type='quantitative' />
            <column-instance column='[CO2 emissions (metric tons per capita) (EN.ATM.CO2E.PC)]' derivation='Sum' name='[sum:CO2 emissions (metric tons per capita) (EN.ATM.CO2E.PC):qk]' pivot='key' type='quantitative' />
            <column-instance column='[F1]' derivation='Sum' name='[sum:F1:qk]' pivot='key' type='quantitative' />
            <column-instance column='[GDP (current US$) (NY.GDP.MKTP.CD)]' derivation='Sum' name='[sum:GDP (current US$) (NY.GDP.MKTP.CD):qk]' pivot='key' type='quantitative' />
            <column-instance column='[GDP growth (annual %) (NY.GDP.MKTP.KD.ZG)]' derivation='Sum' name='[sum:GDP growth (annual %) (NY.GDP.MKTP.KD.ZG):qk]' pivot='key' type='quantitative' />
            <column-instance column='[GDP per capita (current US$) (NY.GDP.PCAP.CD)]' derivation='Sum' name='[sum:GDP per capita (current US$) (NY.GDP.PCAP.CD):qk]' pivot='key' type='quantitative' />
            <column-instance column='[GDP per capita, PPP (current international $) (NY.GDP.PCAP.PP.CD)]' derivation='Sum' name='[sum:GDP per capita, PPP (current international $) (NY.GDP.PCAP.PP.CD):qk]' pivot='key' type='quantitative' />
            <column-instance column='[GDP, PPP (current international $) (NY.GDP.MKTP.PP.CD)]' derivation='Sum' name='[sum:GDP, PPP (current international $) (NY.GDP.MKTP.PP.CD):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Methane emissions (kt of CO2 equivalent) (EN.ATM.METH.KT.CE)]' derivation='Sum' name='[sum:Methane emissions (kt of CO2 equivalent) (EN.ATM.METH.KT.CE):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Nitrous oxide emissions (thousand metric tons of CO2 equivalent) (EN.ATM.NOXE.KT.CE)]' derivation='Sum' name='[sum:Nitrous oxide emissions (thousand metric tons of CO2 equivalent) (EN.ATM.NOXE.KT.CE):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Other greenhouse gas emissions, HFC, PFC and SF6 (thousand metric tons of CO2 equivalent) (EN.ATM.GHGO.KT.CE)]' derivation='Sum' name='[sum:Other greenhouse gas emissions, HFC, PFC and SF6 (thousand metric tons of CO2 equivalent) (EN.ATM.GHGO.KT.CE):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population growth (annual %) (SP.POP.GROW)]' derivation='Sum' name='[sum:Population growth (annual %) (SP.POP.GROW):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population, total (SP.POP.TOTL)]' derivation='Sum' name='[sum:Population, total (SP.POP.TOTL):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Time]' derivation='Sum' name='[sum:Time:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total emissions (kt of CO2 equivalent)]' derivation='Sum' name='[sum:Total emissions (kt of CO2 equivalent):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total greenhouse gas emissions (kt of CO2 equivalent) (EN.ATM.GHGT.KT.CE)]' derivation='Sum' name='[sum:Total greenhouse gas emissions (kt of CO2 equivalent) (EN.ATM.GHGT.KT.CE):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[none:Time:ok]'>
            <groupfilter function='level-members' level='[none:Time:ok]' />
          </filter>
          <slices>
            <column>[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[none:Country Name:nk]</column>
            <column>[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[none:Time:ok]</column>
            <column>[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[none:Time:qk]</column>
            <column>[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[none:Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[:Measure Names]' />
              <lod column='[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[Multiple Values]' />
              <lod column='[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[sum:CO2 emissions (kt) (EN.ATM.CO2E.KT):qk]</rows>
        <cols>[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[none:Time:qk]</cols>
      </table>
      <simple-id uuid='{3DDACBB4-3EC2-4F0F-AE0E-61ED3B8CB0CD}' />
    </worksheet>
    <worksheet name='Sheet 8'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Final_emissions)' name='federated.1vt32u20zcvd8x1g6p6181vbbn3x' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top N' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='18'>
              <calculation class='tableau' formula='18' />
              <range granularity='1' max='220' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1vt32u20zcvd8x1g6p6181vbbn3x'>
            <column datatype='real' name='[CO2 emissions (kt) (EN.ATM.CO2E.KT)]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Time]' role='measure' type='quantitative' />
            <column datatype='real' name='[Total emissions (kt of CO2 equivalent)]' role='measure' type='quantitative' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Time]' derivation='None' name='[none:Time:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CO2 emissions (kt) (EN.ATM.CO2E.KT)]' derivation='Sum' name='[sum:CO2 emissions (kt) (EN.ATM.CO2E.KT):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Time]' derivation='Year' name='[yr:Time:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[none:Country Name:nk]</column>
            <column>[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[none:Time:qk]</column>
            <column>[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[none:Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[none:Country Name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[sum:CO2 emissions (kt) (EN.ATM.CO2E.KT):qk]</rows>
        <cols>[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[yr:Time:ok]</cols>
      </table>
      <simple-id uuid='{A0E47123-9EA0-43A0-B49C-BD20CAF30500}' />
    </worksheet>
    <worksheet name='Sheet 9'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Final_emissions)' name='federated.1vt32u20zcvd8x1g6p6181vbbn3x' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top N' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='18'>
              <calculation class='tableau' formula='18' />
              <range granularity='1' max='220' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1vt32u20zcvd8x1g6p6181vbbn3x'>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Time]' role='measure' type='quantitative' />
            <column datatype='real' name='[Total emissions (kt of CO2 equivalent)]' role='measure' type='quantitative' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Time]' derivation='None' name='[none:Time:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[none:Time:qk]</column>
            <column>[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[none:Country Name:nk]</column>
            <column>[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[none:Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='20' />
            <format attr='cell-h' value='20' />
            <format attr='cell' value='20' />
            <format attr='cell-q' value='100' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.7999999523162842' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{4F92EB20-C15C-4DB0-AEF5-0467855201C7}' />
    </worksheet>
    <worksheet name='Stacked bar chart for emissions'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='12'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Final_emissions)' name='federated.1vt32u20zcvd8x1g6p6181vbbn3x' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top N' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='18'>
              <calculation class='tableau' formula='18' />
              <range granularity='1' max='220' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1vt32u20zcvd8x1g6p6181vbbn3x'>
            <column datatype='real' name='[CO2 emissions (kt) (EN.ATM.CO2E.KT)]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Methane emissions (kt of CO2 equivalent) (EN.ATM.METH.KT.CE)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Nitrous oxide emissions (thousand metric tons of CO2 equivalent) (EN.ATM.NOXE.KT.CE)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Other greenhouse gas emissions, HFC, PFC and SF6 (thousand metric tons of CO2 equivalent) (EN.ATM.GHGO.KT.CE)]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Time]' role='measure' type='quantitative' />
            <column datatype='real' name='[Total emissions (kt of CO2 equivalent)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Total greenhouse gas emissions (kt of CO2 equivalent) (EN.ATM.GHGT.KT.CE)]' role='measure' type='quantitative' />
            <column-instance column='[CO2 emissions (kt) (EN.ATM.CO2E.KT)]' derivation='Avg' name='[avg:CO2 emissions (kt) (EN.ATM.CO2E.KT):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Methane emissions (kt of CO2 equivalent) (EN.ATM.METH.KT.CE)]' derivation='Avg' name='[avg:Methane emissions (kt of CO2 equivalent) (EN.ATM.METH.KT.CE):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Nitrous oxide emissions (thousand metric tons of CO2 equivalent) (EN.ATM.NOXE.KT.CE)]' derivation='Avg' name='[avg:Nitrous oxide emissions (thousand metric tons of CO2 equivalent) (EN.ATM.NOXE.KT.CE):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Other greenhouse gas emissions, HFC, PFC and SF6 (thousand metric tons of CO2 equivalent) (EN.ATM.GHGO.KT.CE)]' derivation='Avg' name='[avg:Other greenhouse gas emissions, HFC, PFC and SF6 (thousand metric tons of CO2 equivalent) (EN.ATM.GHGO.KT.CE):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total greenhouse gas emissions (kt of CO2 equivalent) (EN.ATM.GHGT.KT.CE)]' derivation='Avg' name='[avg:Total greenhouse gas emissions (kt of CO2 equivalent) (EN.ATM.GHGT.KT.CE):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Time]' derivation='None' name='[none:Time:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Time]' derivation='None' name='[none:Time:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[avg:CO2 emissions (kt) (EN.ATM.CO2E.KT):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[avg:Methane emissions (kt of CO2 equivalent) (EN.ATM.METH.KT.CE):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[avg:Nitrous oxide emissions (thousand metric tons of CO2 equivalent) (EN.ATM.NOXE.KT.CE):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[avg:Other greenhouse gas emissions, HFC, PFC and SF6 (thousand metric tons of CO2 equivalent) (EN.ATM.GHGO.KT.CE):qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[Action (Country Name)]'>
            <groupfilter function='level-members' level='[Country Name]' user:ui-action-filter='[Action5]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[Action (Country Name,Region)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country Name]' />
              <groupfilter function='level-members' level='[Region]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[Action (Time)]'>
            <groupfilter function='level-members' level='[none:Time:ok]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[none:Country Name:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;China&quot;</bucket>
              <bucket>&quot;Russian Federation&quot;</bucket>
              <bucket>&quot;India&quot;</bucket>
              <bucket>&quot;Brazil&quot;</bucket>
              <bucket>&quot;Japan&quot;</bucket>
              <bucket>&quot;Indonesia&quot;</bucket>
              <bucket>&quot;Australia&quot;</bucket>
              <bucket>&quot;Germany&quot;</bucket>
              <bucket>&quot;Congo, Dem. Rep.&quot;</bucket>
              <bucket>&quot;Canada&quot;</bucket>
              <bucket>&quot;Mexico&quot;</bucket>
              <bucket>&quot;Korea, Rep.&quot;</bucket>
              <bucket>&quot;South Africa&quot;</bucket>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
              <bucket>&quot;France&quot;</bucket>
              <bucket>&quot;Italy&quot;</bucket>
              <bucket>&quot;United States&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[:Measure Names]</column>
            <column>[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[Action (Country Name,Region)]</column>
            <column>[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[none:Country Name:nk]</column>
            <column>[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[none:Region:nk]</column>
            <column>[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[Action (Country Name)]</column>
            <column>[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[none:Time:qk]</column>
            <column>[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[Action (Time)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[Multiple Values]' scope='rows' value='Total emission (kt of CO2 equivalent)' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[:Measure Names]' />
              <lod column='[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[avg:CO2 emissions (kt) (EN.ATM.CO2E.KT):qk]' />
              <lod column='[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[avg:Methane emissions (kt of CO2 equivalent) (EN.ATM.METH.KT.CE):qk]' />
              <lod column='[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[avg:Nitrous oxide emissions (thousand metric tons of CO2 equivalent) (EN.ATM.NOXE.KT.CE):qk]' />
              <lod column='[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[avg:Other greenhouse gas emissions, HFC, PFC and SF6 (thousand metric tons of CO2 equivalent) (EN.ATM.GHGO.KT.CE):qk]' />
              <lod column='[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[avg:Total greenhouse gas emissions (kt of CO2 equivalent) (EN.ATM.GHGT.KT.CE):qk]' />
              <lod column='[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[Multiple Values]</rows>
        <cols>[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[none:Country Name:nk]</cols>
      </table>
      <simple-id uuid='{C88FC5A3-BE98-423A-BC35-092F1C740B52}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Emission Dashboard'>
      <style />
      <size maxheight='768' maxwidth='1366' minheight='768' minwidth='1366' preset-index='0' sizing-mode='fixed' />
      <datasources>
        <datasource name='Parameters' />
        <datasource caption='Sheet1 (Final_emissions)' name='federated.1vt32u20zcvd8x1g6p6181vbbn3x' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Top N' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='18'>
          <calculation class='tableau' formula='18' />
          <range granularity='1' max='220' min='1' />
        </column>
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.1vt32u20zcvd8x1g6p6181vbbn3x'>
        <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
        <column datatype='string' name='[Region]' role='dimension' type='nominal' />
        <column datatype='integer' name='[Time]' role='measure' type='quantitative' />
        <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
        <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
        <column-instance column='[Time]' derivation='None' name='[none:Time:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='39063' id='7' name='Map by regions' w='34993' x='50805' y='2474' />
        <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' h='5990' id='8' mode='checkdropdown' name='Map by regions' param='[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[none:Country Name:nk]' w='11713' x='86896' y='8073' />
        <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' h='5729' id='9' mode='checkdropdown' name='Map by regions' param='[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[none:Region:nk]' w='11713' x='86603' y='781' />
        <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='7422' id='10' name='Map by regions' pane-specification-id='0' param='[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[sum:Total emissions (kt of CO2 equivalent):qk]' w='12884' x='86969' y='31641' />
        <zone h='38151' id='11' name='Packed Bubbles of Countries wrt Total emissions' w='24378' x='512' y='2865' />
        <zone h='40104' id='18' name='GDP per capita vs CO2 emissions per capita' w='29649' x='20937' y='1563' />
        <zone h='47135' id='19' name='GDP per capita vs Population vs Total Emission' w='32211' x='67277' y='43229' />
        <zone h='44531' id='41' name='Stacked bar chart for emissions' w='35798' x='878' y='54167' />
        <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='16016' id='42' name='Stacked bar chart for emissions' pane-specification-id='0' param='[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[:Measure Names]' w='28331' x='41362' y='83203' />
        <zone _.fcp.SetMembershipControl.false...type='paramctrl' _.fcp.SetMembershipControl.true...type-v2='paramctrl' h='8724' id='43' mode='slider' param='[Parameters].[Parameter 1]' w='11713' x='86896' y='14323' />
        <zone h='41406' id='44' name='Area Chart of Emissions' w='30161' x='36384' y='42188' />
        <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' h='7161' id='45' name='Area Chart of Emissions' param='[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[none:Time:qk]' show-domain='false' show-null-ctrls='false' w='12884' x='86896' y='22396' />
        <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='12109' id='52' name='Packed Bubbles of Countries wrt Total emissions' pane-specification-id='0' param='[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[none:Region:nk]' w='33821' x='878' y='41667' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='2200' minheight='2200' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='66' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='97916' id='65' param='vert' w='98828' x='586' y='1042'>
                <zone fixed-size='280' h='40104' id='18' is-fixed='true' name='GDP per capita vs CO2 emissions per capita' w='29649' x='20937' y='1563'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' h='5990' id='8' mode='checkdropdown' name='Map by regions' param='[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[none:Country Name:nk]' w='11713' x='86896' y='8073'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' h='5729' id='9' mode='checkdropdown' name='Map by regions' param='[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[none:Region:nk]' w='11713' x='86603' y='781'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='39063' id='7' is-fixed='true' name='Map by regions' w='34993' x='50805' y='2474'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='7422' id='10' name='Map by regions' pane-specification-id='0' param='[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[sum:Total emissions (kt of CO2 equivalent):qk]' w='12884' x='86969' y='31641'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='38151' id='11' is-fixed='true' name='Packed Bubbles of Countries wrt Total emissions' w='24378' x='512' y='2865'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='12109' id='52' name='Packed Bubbles of Countries wrt Total emissions' pane-specification-id='0' param='[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[none:Region:nk]' w='33821' x='878' y='41667'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='paramctrl' _.fcp.SetMembershipControl.true...type-v2='paramctrl' h='8724' id='43' mode='slider' param='[Parameters].[Parameter 1]' w='11713' x='86896' y='14323'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' h='7161' id='45' name='Area Chart of Emissions' param='[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[none:Time:qk]' show-domain='false' show-null-ctrls='false' w='12884' x='86896' y='22396'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='41406' id='44' is-fixed='true' name='Area Chart of Emissions' w='30161' x='36384' y='42188'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='47135' id='19' is-fixed='true' name='GDP per capita vs Population vs Total Emission' w='32211' x='67277' y='43229'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='44531' id='41' is-fixed='true' name='Stacked bar chart for emissions' w='35798' x='878' y='54167'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='16016' id='42' name='Stacked bar chart for emissions' pane-specification-id='0' param='[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[:Measure Names]' w='28331' x='41362' y='83203'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{D13A0038-B3EB-4EA7-B815-30B77896F744}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='30'>
    <window class='worksheet' name='Map by regions'>
      <cards>
        <edge name='left'>
          <strip size='141'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[sum:Total emissions (kt of CO2 equivalent):qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[none:Country Name:nk]</field>
            <field>[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[none:Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4B8CE8AF-1E31-42C3-BE83-A15EB563596C}' />
    </window>
    <window class='worksheet' name='Stacked bar chart for emissions'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[:Measure Names]' type='color' />
            <card mode='slider' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[none:Country Name:nk]</field>
            <field>[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[none:Region:nk]</field>
            <field>[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[none:Time:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9A757610-6123-4FB5-ADBB-1844BFE5CBB9}' />
    </window>
    <window class='worksheet' name='GDP per capita vs CO2 emissions per capita'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[none:Region:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[none:Country Name:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[sum:Total emissions (kt of CO2 equivalent):qk]' type='size' />
            <card pane-specification-id='0' param='[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[none:Region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[none:Country Name:nk]</field>
            <field>[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[none:Region:nk]</field>
            <field>[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[none:Time:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DAC0D508-EE34-472F-BD37-C20F584E2424}' />
    </window>
    <window class='worksheet' name='Packed Bubbles of Countries wrt Total emissions'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[none:Region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[none:Country Name:nk]</field>
            <field>[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[none:Region:nk]</field>
            <field>[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[none:Time:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{67F0C46D-D4A1-485A-B8CB-DEA7E97245A5}' />
    </window>
    <window class='worksheet' name='Area Chart of Emissions'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[none:Time:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card mode='checkdropdown' param='[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[none:Region:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[none:Country Name:nk]' type='filter' />
            <card pane-specification-id='1' param='[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[:Measure Names]</field>
            <field>[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[none:Country Name:nk]</field>
            <field>[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[none:Region:nk]</field>
            <field>[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[none:Time:ok]</field>
            <field>[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[none:Time:qk]</field>
            <field>[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[yr:Time:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{514DD24F-DC6D-4D90-A504-6A511DB71882}' />
    </window>
    <window class='worksheet' name='GDP per capita vs Population vs Total Emission'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[none:Country Name:nk]' type='filter' />
            <card pane-specification-id='4' param='[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[sum:Total emissions (kt of CO2 equivalent):qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[:Measure Names]</field>
            <field>[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[none:Country Name:nk]</field>
            <field>[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[none:Time:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{48DC1C79-B947-475F-80F5-398856671E82}' />
    </window>
    <window class='dashboard' maximized='true' name='Emission Dashboard'>
      <viewpoints>
        <viewpoint name='Area Chart of Emissions'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='GDP per capita vs CO2 emissions per capita'>
          <zoom type='entire-view' />
          <highlight field='[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[none:Region:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='GDP per capita vs Population vs Total Emission'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Map by regions'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[sum:Total emissions (kt of CO2 equivalent):qk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Packed Bubbles of Countries wrt Total emissions'>
          <highlight>
            <color-one-way>
              <field>[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[none:Region:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Stacked bar chart for emissions'>
          <zoom type='entire-view' />
          <highlight field='[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{9B5CDCB0-08BE-4783-A163-51768FC185A9}' />
    </window>
    <window class='worksheet' name='Sheet 6'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[none:Time:ok]' type='filter' />
            <card pane-specification-id='1' param='[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[:Measure Names]</field>
            <field>[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[none:Country Name:nk]</field>
            <field>[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[none:Time:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{48007A24-1F58-47A5-829C-5EE98B758AF8}' />
    </window>
    <window class='worksheet' name='Sheet 8'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[:Measure Names]</field>
            <field>[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[none:Country Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{71FD076D-E460-4C21-BCA1-100898D6A8F5}' />
    </window>
    <window class='worksheet' name='Sheet 9'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[:Measure Names]</field>
            <field>[federated.1vt32u20zcvd8x1g6p6181vbbn3x].[yr:Time:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{933C93FB-7F9B-4328-B616-FB27A7583CF6}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Area Chart of Emissions' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Emission Dashboard' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='GDP per capita vs CO2 emissions per capita' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='GDP per capita vs Population vs Total Emission' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO2dV3MkWXaYvzTlfaFgCt6bdtM9vTM7Mzs7u8v15JKikahYiXzTgx70pv+i
      CAXfRFIRKzFCjhvkkhRFrpsd09Nj2sB7oFAoFMr7NHpAD4BCOXQ3UEAD94voiM7EqayTt/Lk
      vffcc8+RTNM0EQiuKfJFKyAQXCTCAATXGmEAgleK7dUFPvjwUypNZPRKkWy+VPdvv/nlL6gY
      Jebn1wBQz0FHgeCcKPHLDx/zh3/wO+wsP2VuZZux8SGSOSuVXJRSPk25qOELyHz0OMf9271k
      U1msXj+d4UHG+0KsLX6O6XaxtRijkouJHkDwKmEACqrFwsPPnvDm3RkefPhrNnb2WVtbYyeW
      oNOmUbb5mJiaJrq+xO03vkY2sgb5DWQJ3J1DFOOraFqZ9e0dJOEFErxKzD/6hFhaZ3ggwNzi
      BtO3bvH0089RnG78LhtdbisEepj//BH+oI8bN2+T3XjIPy9L/MG3X+fJkyd0eVWebOaRi/tH
      BpDNZtF1/fCLTNNEkqTnVvBFPycQnBdLc0/pG5vGrtY+lw17gI8++og33njjub8sk8ngcrmQ
      ZTG6Elx+Gj6lYmQkuA7UeIE25j/no0eLjMzcuwh9BC0wTRPdMKrOKbIshp0vSK0B7MS59/rr
      fPbppwz1dhL0uS9CL0EDDNPkwycrVefevDGCqigXpNGrTc0QaHion9WVFQLBDjK5wkXoJBC0
      jRoD2NrYYHF5iWSuzFBv50XoJBC0jZohkK8jzPRohaLsugh9BIK2UtMD5PI53vnm9wi4RJSE
      4OpTYwBBt4Wf/p+/RlNEDyC4+tS85gfGbzE49RrCqSa4DtQYwCe/+kdcAzfo7wrgcTmr/mbq
      ZZ48mcPf1YuR32c/W2FipJeFxVU6wkP0dwfaprhAcBbUGECws4Nf//rn7E/e4GtvvFb1t/j6
      Eikd7MUcWlliMOTh6ewK0/fusrk4j9HpwzAMdF3HOLFYIzgbDKN2hV7XdRAr9y9EjQFEYwkC
      XT1IlVyNsNVuo9sepri/iWlK5IsGTrtKNpunopnIsowsyyiKImKBzomTq8AAiqKIhbAXpOYp
      HRroI7GzjuSoHc54e0awluL09A8z3N9NRfUwdWOGXGyL0fHxtigsEJwlNT1AfG8Xp9tLoVCs
      lZYkBobHnh24cfsP/jc6PnmOKgoE50dND5BIpLHZ7cx++j5PlzcvQieBoG3U9ABvfeM7lMoV
      ePddrDb7RegkELSNmh4gHttld2uFJ8tb2KyWi9BJIGgbNT3A8sJTttMG4Q7vRegjELSVmh5g
      emqKroAHT7DrIvQRCNpKTQ+wsLzG4MAgDrfvIvQRCNpKTQ/gscFPfvITPptbvQB1BIL2UhsO
      XdL5/g9+gFHKXoQ+AkFbqTGAUNDP1tYWXl/wIvQRCNpKlQGYpkkROz/4/vfxO0RAtODqUzUJ
      1goZfvPrX7CwuMT4jdcafUYguDJUGYDF6eXHP/4TrE4XxXxtNKhAcNWomQN88uAjisUCH3z4
      8UXoIxC0lRoDeO32DO//8peMTd++CH0EgrZSNQSKrDzh0eIW0WgUnCsMhYUnSHC1qTKA8MgN
      NtbW6X7zXQZ7QnU/sPL0YxJGCLu+T65kMNjbxXo0jsfXwfTYYFuUFgjOippQiM5wHyuby1RK
      Je7fnqr6W3Z/h6LkQDJLKDYfk9025tZ2uf3G66zPz2EYhtgTfM6IPcFnS7UbtJTnVx88YGxi
      iu2trRoDkC12HBaJ3UQBq9NgccNgIBzi6edf4HB6xJ7gNiD2BJ8tVQYgqxamJ8fIGypvvXG3
      Rtjp8TPs9jE4CpJpYpggyxJdYR1Z/ADXnpXtGMXyUf3Gga4gbufl3lRV9ZqWFQvlkka5lOfp
      48f1PyFJyJKEJMsoykFeekVVRX56AelcgUQmf/ivcqzk1mWlZpwyNTFCKr6Lr3vgIvQRCNpK
      jQHMPn2C1WankBMrwYKrT40ByJKE8N8Irgs1BlDRNHg2wRUIrjpVXqC15UXufe07WBSJciHD
      6uYOw/09F6WbQHDuVBlAKOjj1z//vyQyefyhMO+889ZF6SUQtIUqA3D5O/nuD390UbpcOR6v
      7lDWjlyBk/2duOzWC9RIcJKaUIjPPvmYdHKPpO7kd7/73kXodGXIFEqUKkcGUG8VV3Cx1BiA
      RaqQk7wMdIkSSYKrT40XKJPOkE9GyZZFLI/g6lPzlJu6RrlSOYgwFAiuODUGMDE9jU1RCHWK
      ItmCq0+NATyZW+G7v/3bbK3MXYQ+AkFbqZkE33/9Dh+8/2tu3rl/Efq8khiJPbTVhcNj2eNF
      Hb95gRoJTkvNnuAnS9tsRyJoFh99XV+pEtZLOZ4urODydWCnSDxbYXK0j7nZBboGxugOetqq
      /GXBLOQxdjaOTpQ74QwMIL+zRSEaOTy2d3Ri7726Ubq5XI50OnN4bLfbCQT85/qdNXuCt2MZ
      FLNEMlebG1SyOJgcH2Z+ZYOSpBL22Xj8eJ7xO3fZWpyj0z95uC3SvEZb9E5u/zRNE13Xa3Yp
      frld9LTolTJ6MX94rJVLGHrtWoJhGFwGl8XJX/x57zefLxCP7x8eezxuvN7zfanWDIG8ToWM
      0cuUr3Ynj1nOMbu4xczMBAtzi2i6jqrIVCoVDBMkSTr8d522RJonNwM9u//a0/JztYuEdOIY
      JLl249HzXrddPO9zcHJTVTueoxoD0LDhMuKs75aZman+W6lYBHS2Inv0hLzsZcrM3JhmaWGB
      8OBYlQFcpx1iNT9cnXMHcvXPN75w7QXO5LrnRK26z/cc1L+3872vGgMo5xJE8wrhYG19MKe/
      kzv+I/fol0Vkpm6ICZ/g8rK9lyKePtrgNRLuwO2wAXUmwXvZCsmdCHb7dFuUM06kUJGeZZU4
      LaZpUtGqx5lWS41dC64x+VKZZLZweKwdm0fVTIIz2Tz5fB6309EW5eLxOPFY7PDYHwjQ09t7
      6s+XKhofzB55YCTgvTujZ6mi4ApT86rMZHIEQyG8nhcPhtM//GcqP/urw2N55h6WP/53L3y9
      q8TOXpK1yJHBB71uJobCF6jR1cEwTJ6sRqrOzQw339BVOwfQTfoGe3G4RJnU64ReKpLdXD88
      llQF79DYBWr0/JiYVUMdoKU7vjY1YtDL40ePCPWN0B0KnK2GgkuLoWkU47uHx7LFAq+YAbwI
      NQZQqWjoqhOHrJ35ly09eVRlkUMTU02kBYID3n+0VJUT9f7UEHZbrZfyedB0nXJFq7MOoFWI
      rMwiSbe4c+elvuNKktjdQa8cpf/zdoQQSSHPmXMIKthPZVne2q01gNv332HqzhtYLC9nYVeV
      QiZNuVg8PHZ6fVfaALKFUpXb0GmzIEsSxWNtIMsyzuf0Gn6xEqnaLz090PXyyr4AVQawt7nA
      z37+gG9873dI7y5y48aNC1HqvDAMoyp5qyRJOGxW4qkspfLRkM/vceIUm9cBWInEqyaWkwNd
      OC0Sq6tHrmebzcbkxPO5nnPF8qXYL11lAIn9BN/87vf54B9/iukIXDkDKJTKfLF49MNZVIX7
      M6NE4ilSx37kCbVLGMA1ocoARmdeY2V5mbHJGTwdF9MlAejFEv/4vX9fde5bf/OfiOSK7KWO
      lrS7gx6CHmfda+wms+SK5cPjoMeJevnixc4VwzDI5Y+GKkjgcdVvr+tKlQFsLz9habtAOGBl
      bn6J0YGLWaAxdYPEw9mac6WKRrZQOjwXqDQed+6lcsSOGYtFUQi4bafWoVSuEE8fhSKrikxX
      4NXa76BpOgsrG1XnXr99NTxv6XyRTP7oWXDarXidp/99v6TKACRJQpKlw0ovpyGfjPJkeRt/
      RzfjQ6cPYbjs5EsVlrf3Do+dduu5GsAHcxtVrr57Y+fXljvxNJnCUc8Q8rlxv2K9436mwFo0
      cXgcDnpe3gBCfWNMWnYplE2+cvd0k5q93SQ3791jfV7sIX4ZSmUN49gayXluKEpmC+yljjY8
      OW1W3M7rGUBYZfcr849wdPQzMznGo88/P9UFPG4ba8sraOb1bMDLQlnTKZTKh/9ORsheFGa5
      hJnYO/qXSV20SlVUPbVjkzP87d/9NWXd5O5Xv36qC/jDQ8ipJC7v+e7dFDRnPbpPJJ4+PB7o
      8tMbvPh4LnNlFv1v/tvhsdQ3gvqvLk9g5KEBZLNZdF3iG7/1ncM/plIpdF1vHZ8vyeQyB41f
      KBTQPEHMe+8e/bkzjJxKodjsVV17NptF03UstqOxm2GaZAt5Bv7DH1d9RbZUQDU1/PYjXWS9
      Qj6XJWA/6sgkSSKVSmGT9KrzaCUKeR2v/cjmZVkmlUphV0w4dl29XMLUKlXfZVEP2sNQLEjH
      hpqFYomyCXrX0WZ1yeFESaXwWiU05UiHUj6PoVXwHNNBlQxSqRQBu1zVNvlcFhMZzXMUj1WS
      VYx0Bp+9+vfIZjJ12yaby+K0Hy1oShzcg1XSq2RNrUy2oKF7jl5ixrG28Ve1TZGiJmG3HbmJ
      VfVA1qFKqMdky8UCaYsD88ax5AreAHKDttG1MrZj15WkA329dqWqbXK5LLJervp9LWhk0pkq
      XRu1TbmYR9cPngXJbDLY1Csl5pbWuDE9WfM30zQolirYbRZSiQQOjw+bRSWTyeByuS7lHlWB
      4CR1DSCfjPK3//dXvPOt7+J1qDgdte7GyOYaW3tpbo0PspfKEd9PcvvmNJlMBqfTeSn2qAoE
      rag7c/3sizl+5/d+mw8//Iyvf+2rdT8Y7h9iP/UYm9NFbn2d3oGRQ/epvLOJufz0UFYK9aDc
      fP187kAgeAnqGkBnwMF//8lfoes6kt3Nu/dPbno32VxdJhKJ4FRN4nkDV7EAuAEwtlYx/umn
      h9LyzD2Um6+TTuxXjeU8Pr8osC24UOoaQN/AEI7ZNRRVoa/u/lyJ/uEx+ocPNkyMnPLLYpHt
      KgNwuj3CAAQXSsMh0O/+4R9hQedX73/ESPjtduslELSFugbQ4bPxk//6l5iGweDka+3WSSBo
      G3V9lYWyzI++93VMWaVSLtUTOTNM0zzMJ3rdcooKLp66PYBKidXdIu++eZfVndokuWfJXiz2
      UnmBBIKXoW4PMHPvLdRyimiiwLtvizoBgqtL3R5gc3MLb0c3twYH260PcJAuMfoPH1Sd6/72
      m8iqCLgTnC11nyhFy/HTf/gl46Mj9AyOc2tyuEbGNHSy+RJul51YNEqgsxuLcjbhD0axzC/+
      5X+sOvcHW/+A7BUGIDhb6j6xvaMzfO/rXyGdTqNY6m8y2NneZGFpmf2tFXK6xNz80rkqKhCc
      Bw1fqWubMb797W/y4YPHzIzUbo38MhQil9fomehmPZuq8uYcxzQNNK020Zaua5gnZI1n1VVO
      ouka8XiKdO5oJ5Pf42i4J1ggOA0NDeCrX73Pg8+e8OZX36zz14NQiN3dXbpuTvPk4acEO3uP
      YoFkmeOPtSTJqHXG74qiIp2IGpUlqW74taqoZPN5oskjr5TVqtIVEMMiwYtT9+kpZNNYXH48
      NplcoYjPdXIYVB0K0dl1cdmNSxWNB/Obh8eSJPH2jaEL00fwalFjAIZe4X//z/9BV8jPUqyA
      9HiRH//bP8VpvZzhzaZpUjmWuexyaim4rNRMgmXFwg++8w1Shps//de/z3vvfePSPvwCwctS
      dwjk6x7i+9/qxmqxMTEmhhOCq0tdA5j79AOerkfoGbrJW3drt0MKBFeFuusAe4kEEjIf/eJn
      PHi00G6dBIK2UbcHuDEzw//623/iuz/6I4bCHe3W6UyY34xVpTYc7g4Q7rj4NCGCy0XdHmB2
      aZ1/8yc/Jra9gcP+/OnmLgOablDW9MN/uiHCrAW11O0BugMu/uw//xker6/BnuAjcoldFtZ3
      8AY7LyyZrkDwotQ1gHy+wNjEKO6OYd6937xGQKVUpGKYFAvFcw+FME+8xQ2jgaym1WysMYz6
      OgiuN3UNIJ1JkdhP8/jR3yArEu/cm2l4gXQqzfDEBBsLC+ceCiHJ5WpZuYGsqtbkJZJlmYpu
      sLixc+yaCjMjfQ3vTXD1qWsAb33zh7z57M188gE9Sf/YJMvLK4xPTZ+9dmeMYRjkjtUXsKgH
      xlMqV6rmCFaLgiqyVVwL6hqALMt88fAB03fvY2thALJqZXzy1S66sLC5W10iaaCLroDwGF0H
      Gj7d5WyMv/jzv+Q3n842EhEIXnkaxhLbnF76h7y4LcJ9KLi6NDSAUqnM8pNHIL/NrXZqdElI
      5QrMr+8eHjtsFm6N9lLIZqq8XHaHE0XUVH5laWgA3V2dhLp6mXjO+q9XBcMwKVWO3KbKs/3O
      iWikqlB21+AwDtPAzGWOPqxakD2+tukqeHEab4mM7PHee1/jk4efEO74Bg6bqJvbCGMvSuWz
      3xwey8FOrF/9FtFEpsq7FPK50DSNTO5owm2zWvB7XG3VV3BE4x4g6OWLLx6jyCbReJrh3lA7
      9boSrOzsV1VDdzus5PNF1iJHicCCXrcwgAukoQF09Q7i8HchKVb6mgTEGXqFpYUFvJ19dHeI
      bl/watHQAB4++BC7x8/C3Cxjt9/ha/frrwbvri2QKBl4Odie+OW/45iYNeERcLAwxUlZ06wq
      F3ooaxonRTHN+uVE633XQQ7SBrI11629B57lMK09bWKaJ0M/Dq578tuatc3sZozjao/3BpHL
      BfTcUbFvxeFAcXmIJavTVXb63aIizwvS0ADCXSEWNqJM3rpL0N94UUjXDQZHJ4itLdIVbB43
      VI/6TtY6Z83650+fS/f83LlnocJeKl9l+CM9frREnPz2UaV3e2cPDqeb5e1Y1WeDXheJTI7U
      sblFwOOkwyuGVq1oaADlio7f58WQ7UyONY6XCY9MMDc7T0d3/0Gl+Wf/jv/WElLdonmyLNe8
      uSRJQpZOK3sQD1RP9iSSJDeWlU7KSrVvVEl6pkOtrCzJ6NWiB7IndZBrr9uwbSQZvYEOtfcg
      kSmUiCaOpYyxqHT6z6+y/VWhrgGszX3O06U1VlY3+OYPfq/pBWTVxsyt2+einODl0DSN9e2j
      tQwJGBkUmbePU9cAUtki3/vR7+OxW9jdXGJxY5fxga526yZ4SQzDJJnKVJ0b4cu5yNE5SeLa
      ziHqGsDNO7f55T//nHg6x+DELe7f6my3XoJzZG59l73U0XBpJNxBj99JIRY9PCfLCs6eXnYT
      GYrlowXBDq8TiyKRTB5VpVdVhWAwQL5Yrl4lt1kufVRt/ezQFgdf+8ZvoesahlQbWy+4ehjl
      MrnNtcNj2WLB2dNLNJEhmT2+cKfitEhEd48m4jabjWAwwMLGDrni0Z6NmeEwgUu+xtFwEvzg
      wcck9yJIrh6+96132qmT4Aph7m5jPPnk6IS/A+Xu5Sm62NAAAi4Vi+sGPldtlXiB4LSYiRjG
      p+8fHkt9I3D3bXLFctW6jNNuQWmx9+Q8aGgAe7EYm3srDE7eYaydGgmuBV+sRKrCRO6N96IV
      C0SjR14rj8dNf38f5YpW5Va3qgq6YaIfm28osvRC842GBpDJZDBPmWr2y9VNMVcQvAzmiYQI
      X06oH8yuVS0S3p8aYieZZS2aODwXDnoY7+3g04WjTOEAr433k8jmq+pKhDt8yDIUiuXGBjA6
      NsYXc2s4nS0KUJgmc5/9krJrgjsTPae7U4HgHDCBfKly4pxJMlsgEj/yWgW9LsrlMstbu423
      RG5H47x+/y6725uNRACIR9aQ7D4qpdKlT4vyPLLGCVnTNJ/JUiOrG6eT1fXatjEato1ec7+m
      YaBrtfdQT7Z525zQoU7bmGaDttF1DP1krFXj+9VPyJoNZfU6z41Zt220OrKGadZvG61O2xz7
      fEMDeOvtd8hmi7z99huNRACwu/24bDKlcrkqLcpxzi4tyslUJ8+XFuV5ZOUTspIkPZOlRlaR
      TyerKLVtIzdsG6XmfiVZRlFr76GebPO2OaFDnbaRpAZtoyjINcUQG9+vckJWaiir1HlupLpt
      o9aRlSWpftuoddrm2OfrDoFWnn7C7MoOG+urbOyX+OF7r9cTA8Dl9ePy+ukfaSgiEFxa6vYA
      IzOv4/N56e/rQdEL9UQEgitB43DokBdvqBeP49VMjisQnIaGc4B4ukhk8SFPlzcaiQgErzyN
      8wJJZZxdYwREHV7BFaZuD7Dy9BN2UyVW5h6xn6vUExEIrgR1e4CRmdcxzE8xTVNkLBBcaRrO
      AXbjCXrCYfxedzv1EQjaSsM5QKVSOVVsTzGbZHF1E4vDw5QoqSp4xWjYAzgt8PHHD1jbijYS
      AcDm8tHT4UO1WEQoRAtZEQrxCoVCaKZMd98gNrPcSASAzN4W0axBf0+nCIVoIStCIS5fKERD
      A/B6PGwuPaEoNV8Iszi9OFWDVCbXVE4guIw0nAPcuPsm06+9WWOpJ3G4vIyMiGoqgleTuj3A
      wucf8l/+/C/Y2Evz8OHDduskELSNugZQKmn88F/8Pg//6afMrTWfBAsErzJ1h0Azd1/nw9+8
      jzvUz3tvfKXdOgkEbaNuD/DFgw8JDU5xa2qITx9+3vQCpqGzsrRAviyKUAtePeoaQNDv5fOH
      H/Pxg4c4vP6mF4itL+EMhVleWDwXBQWC86TuEMjp7+EH359CMg2S6ebuzVLFJOh2kVRFRgjB
      q0f9aNClWYqahCqZzM01f7N393Wz8MVnuHwif6jg1aNuD/D6G2/w93//d5R0hfd+69tNL2B1
      +rl79+65KCcQnDeS+SzYI5vN1o0deV5M00QydNCO7SOQFUzVUreckSRJVeclSQLTRMvmq+QU
      txPqyh7ElxxHlqSD8knHzsvPPntSg3qyXy7/V+srIUvAiWtIkoRkmnA8HkiSMGWlptSThIQk
      UXX++Lnj0jISsmRWx7Ec5DGvua78rCDJy7TNs3pTJxpHrts2Uk3bHJw3TlTxkSQJ2TBAP/Ys
      SDKmamnYNjX3AHVkqfssSHVk67bNsTY/NACB4DrSMBTivIhur7MbT+H2dbSsVrK9scxeIoe/
      o5vBvmYFOkw21xaJJ/J09g7S2xVoImuwvR0ln9rF1TlCONQsjENn9tETDFmhd3AUv9ve9LpP
      P/+MCgpDEzP4HI2rx+uVPDt7edwWDZxBfM7GNZj1coFHXzxFsjuYnp7CWhOIdkQ+sUte9VJJ
      xggNDNCsfn1uP8ryzj5W1cb45CjNsmru72xhDYZJRrfoHRhoHEAGbK2t0T00xObqKkPDw02T
      a+5EIhhamZwmMTEy2Pi+Mkli+ykAnB4fncHGnslELMLThRV8Pi+KzcP0eOMQfdM0mt7LuRBP
      pDENg0wq0VI2kc5i6jqp5H5L2VQ2h6lVSOwnW0iaxLbXwGIne2KYVU82kyvg9/ux1ok0rKZE
      JpnFMDUSyRbXlSSi22usbkZa7rkoZpMUC0WKxRLFmjDkamRZZn15ge3d/ZZZXUu5FKbFhdfr
      aSkrobO0MEc8mWkhqbG+usLTJ0+QLK2ziuczCXbTBYxy89Q7DrcPj9OKjoKpNd+iG+gM4/O4
      6Al3UymXmsqaRrH9PYA/EMTndRGLt2pMGB4cZHNzE09Hd1O5XC5PKBBinyQdXa0Kekv09A2Q
      zxfwBlsVkVMYHx+lrOktggJNcjmd8GA/yVSGzmCzRAI6mUyRUEcQHRmbpdk7SCed1+js7Sad
      KeBoYoSGUSZfkQn63CBZWj7U3p4hehLJmtDok5TyWbC58Tp1LDZn0+vm0zmm794hlUhjadJT
      fUlnVzdKKgtK4x4QDsb3O7t7GIZEOmnS1dXc4zgyPMjcwgp9w+Mtrmttfw+QSewRT6TJ5Fq9
      fWFpaYWe3gECLcp92mw2fH4/gY4QDlsrm5YIdfXQ1+NjZ6dVL1Th8acPWJyfZT3a3GBtNjvh
      vn6mb8zgsDbTQaKYz2FKct1qmCdlZb1AwbBgR6NQZ8PHoaQkk89lDqphnmInX2JjhY+/mGVh
      cYlmrg9FVcikM3WrdJ7E6fUhaxWS6QzZXOvweJfXT19fH6n9vZayE2OjKIrM6MRkS9nFpVVG
      x8bwOJsNWcE0K+01gHw2S2dPN7lslu7u5m91ALfDxubWFol0tqmcqirMzc3XL29ag8HywgLR
      /SKjw62yWauMTt3A73Xj9zRvzPjuDhubm2xsbFbV1KpFoiscRjE1dOQWb0qZzr5h5FKasmzF
      2XQYptDb34teLiJbWr/ZPB0dTI+N4HJ7m8oqFjvhni5KhTwWa+skaXuxOLppkM+mW8pub6wR
      iUToHxpuKbuwMM/efoLFU0QcuJ2ne24k2dZeA7A5HKgWO5OTk4QCzYcf6VQKbyCAy+nEZmk9
      UrOqEnvxOPlC83EfSOxFt0mkM+QLxaaS2WyWQj6HZHGwvTJLptho/CnR3dvF5uIC0WiEVL55
      XJRezpAqKjjNHLFU8/FvuZBhe2OHbCFH2Wg+B0hF1pH9YXK7EZq1glYp8OTRLIlMlnyu+UMC
      sLO6RMfgOLubazTXAIIdAWyqSv9g62SxWiHN5k6MdKa1Dl5/iJ6QH5erdZYSi1WlXCpTKraa
      AxTaawCKohBZW+Dx3OLhrL4RXp+PfDZLPp+nVGkdaOdyuZBNE6Pl6Ffmxu3bdPh82KzN/CQH
      fmKn04XL5WJi+ibupsMrma7eMKqiIJnNHhODzY0olWKSWKaM29F8/CvLMn0DPZi6VOOmr8Ks
      sJvKk9xeoyipTT1AqsXB6MgAdocTqyo3fagrpRzpss7W0jyyzdnygbHaHdhUmaWV1RaS0NU7
      RMDjxO1qnXkkn04Q6B5gaKB1neNsoQS6Ribd/BmT5Nb3c6bsbm+jekJMjAwS8DW/6XwmxdZO
      jEAggOsU+UlTmQLhcIj9eKtxvcbK2iI7W9tsbMebSrpdHsqlPNlMBs1sVQHHxOkN8cabX6Un
      2OwtpTA0NkooEAC9jGY0X4aRVRumJBHwebDUqXT/JZJsZXR8jKDfS6VcrFnwq9HCclDZ8ebt
      202NxWp3Mzoygs/rplQstLyuoVUoazpOZ2sv0Or6JkPDI2yuLbdchA11dZLYi34dZ9IAAAl6
      SURBVJJINe8tsukETqcXr99HTzjcVNY08u01AJfTyvLCIisrK0T3mrsri6USE1PT2KwWisXm
      QxWAQMBHvljB32LCDApDw9MEAi66O5utF4AsV4jF4lgUg8hOqzGtxM7GMo8ePyVTaJ5IAJ6t
      QgKVJhNbgEoxi6446e0NozQxgC8xTRNT05tObAFUm5Xl2aesrW20lAXzsHxRSwMwDBxOD8MD
      fS2v6vO62Fhfx2q1EG/xYO/tpzG0Ent7u03lnG4fXaEgVqsNtYUnqu09gNMX5N5rtyiXWr+h
      dneieAMBAgE/sWjzmy5kEjyZXSCRSGC28Kzsx6Ik9uPokoXWz5ON0fExsnmd0aGOppK5zC5l
      04XbqhNPNh/XS5KCaVSw+0IEXM17N6vLh9+pkE6nadFZoKoqlXKRzv5+WvWZiiLj8XrRjNaL
      QaqqUioW6R0YaLpgBqBarCgyzM0vtJAEn8+HXilR0gyc9uZOBp/bjsPXRSjgayonyzLzC4t4
      vF7s9ubDS9MstdcAIqvzzC5vUtZM+nqa++tHRgaZe/yIR4+f0j/cfELl8AR47bU7eF121BYL
      VsHOTjLpKOWiRjTWatGswsrqNn3dLrZa9ACK4qCry4/T181Ad/MkAVopTbak4pKKROKZpi+D
      ci7Nk8+esB7ZptxiISy1s4nqD1Pci5LVtKbXTcdieLrCGMUcrWZYO+urBPtHiG9vUGoxVPky
      7qZeOpOTlEolLA4P0xOjZNKN2ze9v0s8lSOb3EM7xdKV22Fla3u7ZSi/rjdJi3Ie9I5M884b
      rxHuChLZae77tbl83L59m9u3b7cIQTggsr5MOl8mHms+rgcZr8dDLBbD22IesrW2TrlSIp7M
      YWm6YAV2pwOtkGFtdYnIXvPuXLE40AsHq6DZRLzpJFS12BibHEFFbdljOQMhEpvLFCWJ2Hbj
      vdy6ViRVkYjMP8LX0990DgAQ6OxkY2EWQ5KIxRqvyhcyCeKZMv3hThyO5nOA2Poyqr+H8dFB
      tra2Cfc0XtzyBru4ceMGN27cYCDcfBEsnUrhC3ScwnuoMTe32v6FMNMEj9ePv8XD9zzE4/tM
      Ts0wMjHRcly/ubJEoaLS0eFruWDUNzSE3WpnaHSKcKiVvlZMdEZGhnE5mw9ADK3EznoEp9dJ
      oKu7ybCiwnYsw9jkFKP9nc29QEAxkyQWz2BRVcKDfQ39YbJiZWBoiK+88SbxjVVa5f/OJPZJ
      FivYVLXpg2q1u9Bzu/zs/33QcrXW5rCysrDA2uoKhTNMQJ7L5XC5HPg7uukINOuJFdDaPAkG
      mH36mEKxQPkUrs3TEtneZn8nwn4m3bJnSWTzqPk8XRMDxHZiLa4s0xFwE4lEKJRa/UomPn+Q
      vZ0IlRb+ekV10NPbwX4ij7epsUjEotskkim2ItGWOZqcviB+t4WCLtFs9CtJMlarFavNxvTN
      mZaDCl+oCzsautJ84cgwdOzuDu7enkKrNG8vb2cfM2MDBDq6uDV9dqXYE7EdlpcWWFhaJp5s
      NmyVuHnntfbGAqX3d8lkC6Ak8WIh6GsVi3M6ero6DsZ7+0m6w82iRqGrI0A6WyATSRDubbUa
      bRDb3cbf2UNsP4+nxZsdQFZlysUKeBsN20wW5+dQvB10yjq6aUDDPkDl7r3b7ET3mLp1p2ks
      kGnozM0v4u/qwSgW0Dnd+NbRog60XsqysLJFb18vueyBG7SRHVpsDnp7W7s/D5Cw2Z3YWo9u
      n4uJmZuHL1fV0iLGSFbaawAurx8kiVBHBzu7uy3Hc6cl1N1LqHVkBQDdvQOcUhSQsFpUNtYj
      TL3W30JWpqMjQLFcwudpZigl0jkDt7JPxh1m0NJ80q5a7PT3t/pu0PUUJc1BcWedwMiNlt6a
      05Lc3cUZDLE2/4gb999qucx40VistlOFbHxJWw1AkiQCPh+maTI2dnbd3vlRIVtQuP/WDHuR
      DDSM8jT4+Dfv4wz4KRUtjDVd3bXS3xdC0w3ckoJhmGfiilAULz1dBQzGkDFauplPi687TDG2
      z9jUDEa59frGq0bbd4Slk3EyuQJ7+xleuz3Tzq9+AUqsruwhmQnKUicTI437jnIxz9bWJnv7
      GaZv3cbTzAhMk3QqQa5QpqOz8xR7DU6HVi5hKhbQKii2swv0MgwDWZbRKhUUS+tQ61eJtu8H
      MHSdSqWCzX75y6/qmozNqhOJlhmdbL4AY7U7GRmbZHi09fukUkqztLrD0GD4VKHLp2V/a43l
      VBFHscToW29wNjMsyKf3WV7fxuLwMj0xfEZXvRy03w2qaxQKRXz+5u7Ky8Dnn3xANJFGsTjx
      uU43W2sdkq2zsb5NqZRlezvScnHreXB4A0yNjxPsDrVcCT4t5WKWje1dcrkcisSZDa0uC203
      gM2dGFPTU+xGNtv91c/NvTffZWpkEIcFUrnW8UinQ2FgsJeOzj7CQSfZM3SCu3w+MrEImztR
      YtHWm0xOg9XuJuSxU9TNltGVryJtNQBd0xgfG+HhRx8xMDLRzq9+YRwuL5PT06dajT4tqtUN
      5STRVAm/++yGgpVykULZ4M7d17FJRsvY/dMiyTJBvw8TSfQAL8PG8gJlw8BUHWyurbTzqy8V
      pqmTjCVx+10Uyy+fi+lLytk06XyBhx9/SDSRPrPJqt3lxqoojI2PtX/IcM609X58Pg+zT+aZ
      unkDZ4tIvauMoZdJJ5Osrm+ineEcQFFVFNWCzWLDNJsHwz0PqsWKosDy0vKV6wFEYqwLQCtn
      eDy7xWBvEMnuPbPhVT4ZI6lZ6PR7UGSpppDci1LKZ1jb2MYX6qa7o3m28FeNq9ajvRIYeglV
      VlhemCfbMsbo9KhWK+sLsywsLGOc0cMPsLu5TnBghN2NtVNsnnm1aPs6gMAgmTG5eWuCTDKA
      bD9t7MwpkGQ6QiFC3eEz/WG7BwZZWl3CE+o6sxCLy4LoAdqOwdbmNppusB+LnmllHdVix2aR
      WJqf5fHswpl4gbRygUg0jsPhQJXlKzcHED1A21GZGBtgYX4Ot7+TUIt8Q6fFNMpEdvYIdvZi
      VW34e3rOxAtUyWdQ3UESmwtUZAe9vd0iFELwcrh9QWZ8wTO9piRbsMgajz7/lMGxaeyn2JJ4
      GgzDYHt1HnegBymXuHI9gPACXRFMo8z87CL5Ugmb3c3kzMQZvd1MyqUyqtWKoeun2uv7KiEM
      QHCtEZNgwbVGGIDgWiMMQHCtEQYguNYIAxBca4QBCK41wgAE1xphAIJrjTAAwbXm/wOypxCi
      koge+gAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Map by regions' width='192'>
      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
    </thumbnail>
    <thumbnail height='576' name='Packed Bubbles of Countries wrt Total emissions' width='576'>
      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
    </thumbnail>
    <thumbnail height='576' name='Sheet 6' width='576'>
      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
    </thumbnail>
    <thumbnail height='576' name='Sheet 8' width='576'>
      iVBORw0KGgoAAAANSUhEUgAAAkAAAAJACAYAAABlmtk2AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOzdd5jcZ33u//e3TZ+drdIWabXqvbnIGNtgm+oAphjICSnAOSc/0gickF9O
      SAgnhISQkEZOEgi5IARIaAFiUw2m2Bhs4ypZsqxedrXSanub9i3P+WO1clGXtszu3K/r8mVp
      d8ozs9qZez6fp1jGGIOIiIhIlbAsy7JnexAiIiIiM00BSERERKqOApCIiIhUHQUgERERqToK
      QCIiIlJ1FIBERESk6igAiYiISNVRABIREZGqowAkIiIiVUcBSERERKqOApCIiIhUHQUgERER
      qToKQCIiIlJ1FIBERESk6igAiYiISNVRABIREZGqowAkIiIiVUcBSERERKqOApCIiIhUHQUg
      ERERqToKQCIiIlJ1FIBERESk6igAiYiISNVRABIREZGq4872AEREKkV+qIfOY30EF3PhZB3r
      lrZgWQXu+9d/4BP3bKdpyUv5gw+9nabpHqiIXDEFIBGRU/b99PP87vs/x+DFXHj9G3jwU7+P
      60SM9HTx9J49jJoN+NM9SBGZEgpAIiKnNLRv4tV33EH+1N/D0hiPPfBDjvYb1r7gRaxrq33m
      wi1bsCwL8Fiy9QbuMC3ULtxKajYGLiKXzDLGmNkehIhIJSoPdvKn73k739oR8asf+TjvuGXV
      bA9JRKaAZVmWKkAiIlfEYAwYY8CysC3rWV+f+B6WxemvnvrMaVkWWBac+vszn0UtJr5l8Xzm
      HJd99u2LyMXRKjARkSvi89Cn38d127bxSx/+r2d9vcyDn/pDtm3bxi9/6EvsfeQH/MG7/wcv
      uO46bnzJq/nwZ77HwOg4R568n3/40/dw+8tezLZt27jtTf8fn/3u4xSj591NWGDHj77KB971
      dl504/Vsu+56fu6Ot/OxL/+A3vHyTD5gkXlBFSARkWl2+If/xu/eb4jV1LJy+RK6Ozv56sc/
      zL6fLmegqxOTqKW2tYNs3RAHDz/OJ//x/7K442+4ZXUdACYqcd/nP8pfffLrDJgM7ctW4VoR
      4wNdfPpvP8DuA+/g/e/+eZqSekkXuVj6bRERmWaZ5jW89Rfv4MU3XkXOHuWrf/eH/NXXHqez
      z+aX3vF73Hr9NlobUpQGDvH+33wbPzp0jCcPdJ4KQIbi0Qf463/+CsPp5fzq7/wBP3/reuJW
      yMn9j/PhP/4DHvjWF/jmC7fxthevnO2HKjJnqAUmIjLNFmy8mTfedgNN2SSx9AK2blgCQMPy
      63nD7beyuCmDY9uk6jvYtnkZRBF+GE5cOSrw4//6L7oLDre87Xd568s3kXQdbCdG86pr+fW3
      vYlcdIKvfecnaEWLyMVTBUhEpJIVhthxsBuooTE5zlO7dj3n2yWTxEt49D29nwGgYVYGKTL3
      KACJiFSwyPcZKRaAAf7tg+/h385xuVh5gCEUgEQulgKQiEgFs20bx3GANFff+iI66s6+1aLr
      dVAzs0MTmdMUgEREKlk8SVttDuhjzYv/G+961XpN3hSZAvo9EhGpZPFaXrhtHVDke1/6HDu6
      Rk5tsPjMf2FphMcf2n76CA8RuTBVgEREKprL6le/jTu+fj9f2/E9fv2tT/Pq176KFS057Min
      58jT/PAHP+JE5ma+/p+bdRaZyEVSABIRqXC2u4Df+OCfk/rYx/j+o3v4xr9/Aj+MsGyHVLaO
      hW1ruOO2l5Kd7YGKzCE6DFVE5BzC0jhPPHQfnQOG1dtuYG1r7myX4uTex3ngqS5qlm7hls0d
      p7/es+cxHth9jNplW7l505LT1xg68jg/evwINa3ruGnbKrzJbxjDwe33seNwnuVXbWNj+3PX
      dEVBga79T7P74DGK5QDbi1Pf3M7aNSupT8em4RkQmZ8sy7IUgERERKSqWJZlaRK0iIiIVB0F
      IBEREak6CkAiIiJSdRSAREREpOooAImIiEjVUQASERGRqqMAJCIiIlVHAWgeKZVK+L4/28MQ
      ERGpeApA80gYhoRhONvDEBERqXgKQCIiIlJ1FIBERESk6igAiYiISNVRABIREZGqowAkIiIi
      VUcBSERERKqOApCIiIhUHQUgERERqToKQCIiIlJ1FIBERESk6igAiYiISNVRABIREZGqowAk
      IiIiVUcBSERERKqOApCIiIhUHQUgERERqToKQCIiIlJ1FIBERESk6igAiYiISNVRABIREZGq
      owAkIiIiVUcBSERERKqOApCIiIhUHQUgERERqToKQCIiIlJ1FIBERESk6igAiYiISNVRABIR
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='576' name='Sheet 9' width='576'>
      iVBORw0KGgoAAAANSUhEUgAAAkAAAAJACAYAAABlmtk2AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAJ9UlEQVR4nO3WMQEAIAzAMMC/5+ECjiYKenbPzCwAgJDzOwAA4DUDBADkGCAAIMcAAQA5
      BggAyDFAAECOAQIAcgwQAJBjgACAHAMEAOQYIAAgxwABADkGCADIMUAAQI4BAgByDBAAkGOA
      AIAcAwQA5BggACDHAAEAOQYIAMgxQABAjgECAHIMEACQY4AAgBwDBADkGCAAIMcAAQA5BggA
      yDFAAECOAQIAcgwQAJBjgACAHAMEAOQYIAAgxwABADkGCADIMUAAQI4BAgByDBAAkGOAAIAc
      AwQA5BggACDHAAEAOQYIAMgxQABAjgECAHIMEACQY4AAgBwDBADkGCAAIMcAAQA5BggAyDFA
      AECOAQIAcgwQAJBjgACAHAMEAOQYIAAgxwABADkGCADIMUAAQI4BAgByDBAAkGOAAIAcAwQA
      5BggACDHAAEAOQYIAMgxQABAjgECAHIMEACQY4AAgBwDBADkGCAAIMcAAQA5BggAyDFAAECO
      AQIAcgwQAJBjgACAHAMEAOQYIAAgxwABADkGCADIMUAAQI4BAgByDBAAkGOAAIAcAwQA5Bgg
      ACDHAAEAOQYIAMgxQABAjgECAHIMEACQY4AAgBwDBADkGCAAIMcAAQA5BggAyDFAAECOAQIA
      cgwQAJBjgACAHAMEAOQYIAAgxwABADkGCADIMUAAQI4BAgByDBAAkGOAAIAcAwQA5BggACDH
      AAEAOQYIAMgxQABAjgECAHIMEACQY4AAgBwDBADkGCAAIMcAAQA5BggAyDFAAECOAQIAcgwQ
      AJBjgACAHAMEAOQYIAAgxwABADkGCADIMUAAQI4BAgByDBAAkGOAAIAcAwQA5BggACDHAAEA
      OQYIAMgxQABAjgECAHIMEACQY4AAgBwDBADkGCAAIMcAAQA5BggAyDFAAECOAQIAcgwQAJBj
      gACAHAMEAOQYIAAgxwABADkGCADIMUAAQI4BAgByDBAAkGOAAIAcAwQA5BggACDHAAEAOQYI
      AMgxQABAjgECAHIMEACQY4AAgBwDBADkGCAAIMcAAQA5BggAyDFAAECOAQIAcgwQAJBjgACA
      HAMEAOQYIAAgxwABADkGCADIMUAAQI4BAgByDBAAkGOAAIAcAwQA5BggACDHAAEAOQYIAMgx
      QABAjgECAHIMEACQY4AAgBwDBADkGCAAIMcAAQA5BggAyDFAAECOAQIAcgwQAJBjgACAHAME
      AOQYIAAgxwABADkGCADIMUAAQI4BAgByDBAAkGOAAIAcAwQA5BggACDHAAEAOQYIAMgxQABA
      jgECAHIMEACQY4AAgBwDBADkGCAAIMcAAQA5BggAyDFAAECOAQIAcgwQAJBjgACAHAMEAOQY
      IAAgxwABADkGCADIMUAAQI4BAgByDBAAkGOAAIAcAwQA5BggACDHAAEAOQYIAMgxQABAjgEC
      AHIMEACQY4AAgBwDBADkGCAAIMcAAQA5BggAyDFAAECOAQIAcgwQAJBjgACAHAMEAOQYIAAg
      xwABADkGCADIMUAAQI4BAgByDBAAkGOAAIAcAwQA5BggACDHAAEAOQYIAMgxQABAjgECAHIM
      EACQY4AAgBwDBADkGCAAIMcAAQA5BggAyDFAAECOAQIAcgwQAJBjgACAHAMEAOQYIAAgxwAB
      ADkGCADIMUAAQI4BAgByDBAAkGOAAIAcAwQA5BggACDHAAEAOQYIAMgxQABAjgECAHIMEACQ
      Y4AAgBwDBADkGCAAIMcAAQA5BggAyDFAAECOAQIAcgwQAJBjgACAHAMEAOQYIAAgxwABADkG
      CADIMUAAQI4BAgByDBAAkGOAAIAcAwQA5BggACDHAAEAOQYIAMgxQABAjgECAHIMEACQY4AA
      gBwDBADkGCAAIMcAAQA5BggAyDFAAECOAQIAcgwQAJBjgACAHAMEAOQYIAAgxwABADkGCADI
      MUAAQI4BAgByDBAAkGOAAIAcAwQA5BggACDHAAEAOQYIAMgxQABAjgECAHIMEACQY4AAgBwD
      BADkGCAAIMcAAQA5BggAyDFAAECOAQIAcgwQAJBjgACAHAMEAOQYIAAgxwABADkGCADIMUAA
      QI4BAgByDBAAkGOAAIAcAwQA5BggACDHAAEAOQYIAMgxQABAjgECAHIMEACQY4AAgBwDBADk
      GCAAIMcAAQA5BggAyDFAAECOAQIAcgwQAJBjgACAHAMEAOQYIAAgxwABADkGCADIMUAAQI4B
      AgByDBAAkGOAAIAcAwQA5BggACDHAAEAOQYIAMgxQABAjgECAHIMEACQY4AAgBwDBADkGCAA
      IMcAAQA5BggAyDFAAECOAQIAcgwQAJBjgACAHAMEAOQYIAAgxwABADkGCADIMUAAQI4BAgBy
      DBAAkGOAAIAcAwQA5BggACDHAAEAOQYIAMgxQABAjgECAHIMEACQY4AAgBwDBADkGCAAIMcA
      AQA5BggAyDFAAECOAQIAcgwQAJBjgACAHAMEAOQYIAAgxwABADkGCADIMUAAQI4BAgByDBAA
      kGOAAIAcAwQA5BggACDHAAEAOQYIAMgxQABAjgECAHIMEACQY4AAgBwDBADkGCAAIMcAAQA5
      BggAyDFAAECOAQIAcgwQAJBjgACAHAMEAOQYIAAgxwABADkGCADIMUAAQI4BAgByDBAAkGOA
      AIAcAwQA5BggACDHAAEAOQYIAMgxQABAjgECAHIMEACQY4AAgBwDBADkGCAAIMcAAQA5BggA
      yDFAAECOAQIAcgwQAJBjgACAHAMEAOQYIAAgxwABADkGCADIMUAAQI4BAgByDBAAkGOAAIAc
      AwQA5BggACDHAAEAOQYIAMgxQABAjgECAHIMEACQY4AAgBwDBADkGCAAIMcAAQA5BggAyDFA
      AECOAQIAcgwQAJBjgACAHAMEAOQYIAAgxwABADkGCADIMUAAQI4BAgByDBAAkGOAAIAcAwQA
      5BggACDHAAEAOQYIAMgxQABAjgECAHIMEACQY4AAgBwDBADkGCAAIMcAAQA5BggAyDFAAECO
      AQIAcgwQAJBjgACAHAMEAOQYIAAgxwABADkGCADIMUAAQI4BAgByDBAAkGOAAIAcAwQA5Bgg
      ACDHAAEAOQYIAMgxQABAjgECAHIMEACQY4AAgBwDBADkGCAAIMcAAQA5BggAyDFAAECOAQIA
      cgwQAJBjgACAHAMEAOQYIAAgxwABADkGCADIMUAAQI4BAgByDBAAkGOAAIAcAwQA5BggACDH
      AAEAOQYIAMgxQABAjgECAHIMEACQY4AAgBwDBADkGCAAIMcAAQA5BggAyDFAAECOAQIAcgwQ
      AJBjgACAHAMEAOQYIAAgxwABADkGCADIMUAAQI4BAgByDBAAkGOAAIAcAwQA5BggACDHAAEA
      OQYIAMgxQABAjgECAHIup2IIfPpxjZMAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Stacked bar chart for emissions' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
